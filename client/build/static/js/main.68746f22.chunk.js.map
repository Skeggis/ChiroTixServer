{"version":3,"sources":["Components/Authentication/helpers.js","Components/SearchBar/SearchBar.js","Components/Events/EventItem/EventItem.js","Components/Events/EventDescriptionItem/EventDescriptionItem.js","Components/Events/Events.js","Components/Loader/Loader.js","Components/Header/Header.js","Components/Hero/Hero.js","Pages/HomePage/HomePage.js","Constants.js","Components/BigAd/BigAd.js","Components/ScrollDownButton/ScrollDownButton.js","Components/MainInfoBar/MainInfoBar.js","Components/EventDescription/EventDescription.js","Components/ShareButtons/ShareButtons.js","Pages/EventPage/EventPage.js","Components/TicketsImage/TicketsImage.js","Components/TicketsSteps/TicketsSteps.js","Components/TicketsList/TicketsList.js","Components/Step2Form/BillingInformation/BillingInformation.js","Components/Step2Form/TicketOwnersInformation/TicketOwnersInformation.js","Components/Step2Form/Step2Form.js","Components/OrderDetails/OrderDetails.js","Components/PaypalButton/PaypalButton.js","Components/FullscreenLoading/FullscreenLoading.js","Components/PaymentStep/PaymentForm/PaymentForm.js","Components/PaymentStep/PaymentStep.js","Pages/TicketsPage/TicketsPage.js","Pages/InsertPage/InsertPage.js","Pages/ReceiptPage/ReceiptPage.js","Pages/NotFoundPage/NotFoundPage.js","Components/LoginForm/LoginForm.js","Components/CreateUserForm/CreateUserForm.js","Pages/EventsInfoPage/EventsInfoPage.js","App.js","index.js"],"names":["storage","window","localStorage","getAccessToken","getItem","isAuthenticated","redirectToLogin","history","location","replace","process","AuthenticatedRoute","Component","component","exact","path","console","log","render","props","AuthenticateBeforeRender","useState","setAuthenticated","useEffect","a","async","accessToken","getAccess","access","authenticate","then","post","url","method","headers","data","axios","result","success","Option","Select","RangePicker","DatePicker","SearchBar","searchValues","setEvents","hovering","setHovering","seeMore","setSeeMore","searchString","setSearchString","selectedCategories","setSelectedCategories","selectedCountries","setSelectedCountries","selectedCities","setSelectedCities","availableCities","setAvailableCities","selectedOrganizations","setSelectedOrganizations","selectedDates","setSelectedDates","selectedTags","setSelectedTags","selectedSpeakers","setSelectedSpeakers","selectedPrice","setSelectedPrice","selectedCeCredits","setSelectedCeCredits","searchLoading","setSearchLoading","handleSearch","event","search","organizations","map","org","parseInt","key","countries","count","cities","city","tags","tag","speakers","sp","dates","length","startDate","endDate","price","minPrice","maxPrice","CECredits","minCECredits","maxCECredits","categories","cat","events","className","onSubmit","onMouseEnter","onMouseLeave","Search","value","onChange","target","size","enterButton","loading","icon","style","width","color","onSearch","isOpened","gutter","marginTop","sm","md","placeholder","showSearch","mode","labelInValue","id","name","newCities","filter","cityId","myCity","find","c","some","country","countryid","myCities","val","citiesInCountry","concat","date","dateString","marginBottom","type","onClick","prev","paddingTop","paddingBottom","span","speaker","range","defaultValue","max","tipFormatter","credits","display","justifyContent","withRouter","eventIsOpen","setEventIsOpen","selectedEvent","setSelectedEvent","eventRowNumber","setOldRowNumber","eventColNumber","setOldColNumber","setEventWasClosed","isHovering","setIsHovering","handleClickTickets","e","push","selected","cardHover","isSoldOut","isSelling","handleEventClick","src","image","alt","position","top","left","margin","flexDirection","animateOnMount","isVisible","animationIn","animationOut","animationInDuration","animationOutDuration","fontSize","animationInDelay","padding","organization","visibility","Date","toDateString","height","backgroundColor","marginLeft","animate","animationInDirection","animationOutDirection","descriptionAnimationIn","descriptionAnimationOut","imageTextAnimationIn","imageTextAnimationOut","priceRange","Number","toFixed","animationDuration","overflow","shortDescription","fontWeight","marginRight","Events","mobile","useMedia","eventRows","setEventRows","numEvents","myRows","tempEvents","JSON","parse","stringify","splice","oldRowNumber","oldColNumber","eventWasClosed","row","i","j","xs","lg","xl","xxl","zIndex","Loader","alignItems","ticketTime","showTimer","setLocation","pathname","split","to","Hero","backgroundImage","HomePage","setSize","setSearchValues","setLoading","get","featured","fetchData","justify","active","Array","paragraph","rows","URL","getWindowDimensions","innerWidth","innerHeight","BigAd","title","minorTitle","subTitle","mainInfoBarHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","ScrollDownButton","handleClick","down","MainInfoBar","handleBuyTickets","setHeight","handleScroll","ref","useRef","current","clientHeight","flexWrap","borderColor","maxWidth","EventDescription","description","speakersItems","forEach","avatar","ShareButtons","FacebookShareButton","FacebookIcon","round","Text","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","EmailIcon","EventPage","setOrganization","setEvent","setMainInfoBarHeight","scrollHeight","setScrollHeight","setUrl","scrollTo","eventId","match","params","eventInfo","fetchEvent","scrollY","mainInfoRef","headerRef","setDown","scrollToRef","offsetTop","behavior","dateRange","longDescription","TicketsImage","imageUrl","TicketsSteps","stepsInfo","comp","step","Step","status","TicketsList","ticketTypes","handleTicketChange","totalTicketPrice","theTicketTypes","Item","textAlign","ticket","align","parseFloat","shape","amount","createMobileButtons","handleMobile","addition","stopPropagation","preventDefault","defaultActiveKey","Panel","header","extra","BillingInformation","confirmDirty","setConfirmDirty","getFieldDecorator","form","buyerInfo","setBuyerInfo","formItemLayout","labelCol","offset","wrapperCol","updateState","field","newBuyer","label","initialValue","rules","required","message","whitespace","email","validator","rule","callback","validateFields","force","confirmEmail","getFieldValue","onBlur","phone","address","state","zipCode","genExtra","TicketOwnersInformation","openPanels","setOpenPanels","setTicketsOwnersInfo","ticketsOwnersInfo","copy","sort","b","k","ownerInfo","beenTouched","ticketsOwnerInfoHTML","ticketsList","ticketState","ticketInfo","info","nr","infoNr","list","allTouched","validateOwnerInfo","activeKey","panelsOpen","Form","create","stepsController","validateFieldsAndScroll","err","values","OrderDetails","orderDetails","chiroInfo","tickets","receipt","lines","theme","twoToneColor","insurance","borderTop","colSpan","insurancePrice","cardNumber","expiryDate","place","companyName","kennitala","PayPalButton","PaypalButton","showButtons","React","ReactDOM","nextProps","isScriptLoaded","isScriptLoadSucceed","this","paypal","Buttons","driver","setState","createOrder","actions","onApprove","onInit","onError","onCancel","scriptLoader","FullscreenLoading","disableBodyScroll","document","querySelector","clearAllBodyScrollLocks","background","WrappedPaymentForm","buyTickets","insuranceSelected","setInsuranceSelected","submitCardLoading","totalPrice","setPaypalProcessingLoading","paypalProcessingLoading","triedToSubmit","card","setCard","setDate","insuranceDialogOpen","setInsuranceDialogOpen","termsDialogOpen","setTermsDialogOpen","verifyInsuranceOpen","setVerifyInsuranceOpen","termsSelected","setTermsSelected","termsMessage","setTermsMessage","handleSubmit","insuranceVerified","insuranceVerifiedValue","error","validateStatus","errorMsg","handleVerifyInsurance","verify","visible","onOk","footer","centered","centerd","Fragment","checked","labelAlign","help","enable","disable","initButtons","order","capture","details","orderId","orderID","purchase_units","currency_code","PaymentStep","insurancePercentage","borderCollapse","defaultImage","TicketsPage","setTime","setShowTimer","reserveLoading","setReserveLoading","releaseLoading","setReleaseLoading","setSubmitCardLoading","setCurrent","undefined","buyerId","setBuyerId","timer","setTimer","releaseTime","setReleaseTime","setEventInfo","setTicketTypes","setTotalTicketPrice","setOrderDetails","setInsurancePercentage","setTimeout","now","currentTimer","time","minutes","seconds","theSocket","showErrors","messages","socket","io","connect","query","on","showTimerDoneModal","showReceipt","disconnect","direction","Modal","content","notification","placement","continueButton","htmlType","open","socketId","reservedTickets","emit","newTicketsOwnersInfo","oldTicketsOwnersInfo","reservedTicket","ownerInfoForThisTicket","oldTicket","ticketTypeId","used","reserveTickets","componentToShow","backButton","ticketId","addTicket","newTicketTypes","reverse","ticketToDelete","index","indexOf","paymentOptions","openNotificationWithIcon","setValues","schedule","setSchedule","selectedSellingTime","setSelectedSellingTime","selectedImage","setSelectedImage","newSpeakers","setNewSpeakers","setTickets","handleChangeTicket","oldState","handleSchedule","timeStamp","isStartTime","startTime","endTime","eventImageUploadProps","action","authorization","file","fileList","handleAddSpeaker","temp","scheduledDivs","use12Hours","format","formData","FormData","append","originFileObj","myOrganization","mySpeakers","startSellingTime","finishSellingTime","longitude","latitude","category","eventResult","uploadEvent","theSchedule","diff","initialDay","moment","add","handleDateOfEventChange","onFocus","showTime","TextArea","autoSize","minRows","maxRows","filterOption","input","option","children","toLowerCase","handleChangeSpeakerName","handleChangeSpeakerImage","pop","lable","styl","newTickets","handleOwnerInfoLabelChange","handleOwnerInfoRequiredChange","Group","handleOwnerInfoTypeChanged","addOwnerInfoItem","removeOwnerInfoItem","ReceiptPage","setChiroInfo","postRequest","password","setItem","Password","prefix","confirmPassword","handleChangeEventState","newEvents","getEvents","collapsePanels","ticketDivs","ticketType","reserved","sold","disabled","handleChangeTicketState","responseType","response","FileSaver","saveAs","onDownload","adminIsSelling","setTicketTime","BAPIjs","setPublicToken","CreateUserForm","InsertPage","EventsInfoPage","routeProps","LoginForm","NotFoundPage","getElementById"],"mappings":"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","file":"static/js/main.68746f22.chunk.js","sourcesContent":["// https://stackoverflow.com/questions/49819183/react-what-is-the-best-way-to-handle-login-and-authentication\n// ORMS, OAUTH2, https://github.com/dchester/epilogue , Access_- And Refresh-tokens! ,\n// https://developer.okta.com/blog/2018/08/21/build-secure-rest-api-with-node\n// https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/\n// https://serverless-stack.com/chapters/add-the-session-to-the-state.html\nimport React, {useState, useEffect} from 'react';\n\nimport {Route} from 'react-router-dom'\nimport axios from 'axios'\n\nlet storage = window.localStorage\n\nexport const getAccessToken = () => storage.getItem('access_token')\n// export const getRefreshToken = () => storage.get('refresh_token')\nexport const isAuthenticated = () => !!getAccessToken()\n\nexport const authenticate = async (props) => {\n    console.log(\"THERE\")\n    let accessToken = getAccessToken()\n    if (accessToken) {\n      try {\n        const access = await getAccess(accessToken) // call an API, returns tokens\n        console.log(\"HERE\")\n        if(!access){redirectToLogin(props.history)}\n        return access\n      } catch (error) {\n        redirectToLogin(props.history)\n        return false\n      }\n    }\n  \n    redirectToLogin(props.history)\n    return false\n  }\n\n  const redirectToLogin = (history) => {\n    // history.push('/login')\n    // return <Redirect to='/login' />\n    window.location.replace(\n      `${process.env.REACT_APP_SERVER_URL}/login`\n    )\n    // or history.push('/login') if your Login page is inside the same app\n  }\n\nexport const AuthenticatedRoute = ({\n    component: Component,\n    exact,\n    path,\n  }) => {\n      console.log(isAuthenticated())\n      return (\n  <Route\n      exact={exact}\n      path={path}\n      render={props =>\n        isAuthenticated() ? (\n          <Component {...props} />\n        ) : (\n          <AuthenticateBeforeRender render={() => <Component {...props} />} />\n        )\n      }\n    />\n  )}\n\n  const AuthenticateBeforeRender = (props) => {\n    console.log(\"AUTH2\")\n      const [isAuthenticated, setAuthenticated] = useState(false)\n  console.log(isAuthenticated)\n      useEffect(() => {\n        authenticate(props).then(isAuthenticated => {\n            setAuthenticated( isAuthenticated )\n          })\n      }, [])\n  \n    return (isAuthenticated ? props.render() : null);\n  }\n\n  const getAccess = async (accessToken) => {\n    let post = {\n        url: `${process.env.REACT_APP_SERVER_URL}/api/authenticate`,\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        data: { accessToken }\n    }\n\n    let result = await axios(post)\n    let data = result.data\n    console.log(data)\n    return data.success\n  }","import React, { useState, useEffect, Fragment } from 'react'\nimport {\n  Card,\n  Input,\n  Select,\n  Divider,\n  Button,\n  DatePicker,\n  Row,\n  Col,\n  Slider\n} from 'antd'\nimport 'antd/dist/antd.css';\nimport './SearchBar.scss'\nimport axios from 'axios'\n\nimport { Collapse } from 'react-collapse'\n\nconst { Option } = Select\nconst { RangePicker } = DatePicker\n\nexport default function SearchBar(props) {\n  const {\n    searchValues,\n    setEvents\n  } = props\n\n\n  const [hovering, setHovering] = useState(false)\n  const [seeMore, setSeeMore] = useState(false)\n\n  const [searchString, setSearchString] = useState('')\n  const [selectedCategories, setSelectedCategories] = useState([])\n  const [selectedCountries, setSelectedCountries] = useState([])\n  const [selectedCities, setSelectedCities] = useState([])\n  const [availableCities, setAvailableCities] = useState([])\n  const [selectedOrganizations, setSelectedOrganizations] = useState([])\n  const [selectedDates, setSelectedDates] = useState([])\n  const [selectedTags, setSelectedTags] = useState([])\n  const [selectedSpeakers, setSelectedSpeakers] = useState([])\n  const [selectedPrice, setSelectedPrice] = useState([])\n  const [selectedCeCredits, setSelectedCeCredits] = useState([])\n\n  const [searchLoading, setSearchLoading] = useState(false)\n\n  async function handleSearch(event) {\n    setSearchLoading(true)\n    const result = await axios({\n      url: `${process.env.REACT_APP_SERVER_URL}/api/searchEvents`,\n      method: 'post',\n      data: {\n        search: {\n          organizations: selectedOrganizations.map(org => parseInt(org.key)),\n          countries: selectedCountries.map(count => parseInt(count.key)),\n          cities: selectedCities.map(city => parseInt(city.key)),\n          tags: selectedTags.map(tag => parseInt(tag.key)),\n          speakers: selectedSpeakers.map(sp => parseInt(sp.key)),\n          dates: selectedDates.length > 0 ? {\n            startDate: selectedDates[0],\n            endDate: selectedDates[1]\n          } : {},\n          price: {\n            minPrice: selectedPrice[0],\n            maxPrice: selectedPrice[1]\n          },\n          CECredits: {\n            minCECredits: selectedCeCredits[0],\n            maxCECredits: selectedCeCredits[1]\n          },\n          searchString,\n          categories: selectedCategories.map(cat => parseInt(cat.key))\n        }\n      }\n    })\n    console.log(result)\n    setEvents(result.data.events)\n    setSearchLoading(false)\n  }\n\n\n  useEffect(() => {\n    setAvailableCities(searchValues.cities)\n  }, [])\n\n  function handleSeeMore() {\n    setSeeMore(prev => !prev)\n  }\n\n  function handleCountryChange(value) {//ATH value is a list of countries\n    //Clear cities that are not in specified country\n    if (selectedCities.length > 0 && value.length !== 0) {\n      const newCities = selectedCities.filter(city => {\n        const cityId = parseInt(city.key)\n        const myCity = searchValues.cities.find(c => c.id === cityId)\n\n\n        let b = value.some(country => {\n          const countryId = parseInt(country.key)\n          return countryId === myCity.countryid //todo format in server\n        })\n        return b\n\n      })\n\n      setSelectedCities(newCities)\n    }\n\n    setSelectedCountries(value)\n    if (value.length > 0) {\n      let myCities = []\n      value.map(val => {\n        const id = parseInt(val.key, 10)\n        const citiesInCountry = searchValues.cities.filter(c => c.countryid === id) //todo format in backend\n        myCities = myCities.concat(citiesInCountry)\n      })\n      setAvailableCities(myCities)\n    } else {\n      setAvailableCities(searchValues.cities)\n    }\n  }\n\n\n  function handleCatChange(value) {\n    setSelectedCategories(value)\n  }\n\n  function handleCityChange(value) {\n    setSelectedCities(value)\n  }\n\n  function handleDateChange(date, dateString) {\n    setSelectedDates(dateString)\n  }\n\n  function handleOrganizationsChange(value) {\n    setSelectedOrganizations(value)\n  }\n\n  function handleTagsChange(value) {\n    setSelectedTags(value)\n  }\n\n  function handleSpeakersChange(value) {\n    setSelectedSpeakers(value)\n  }\n\n  function handlePriceChange(price) {\n    setSelectedPrice(price)\n  }\n\n  function handleCeCreditsChange(credits) {\n    setSelectedCeCredits(credits)\n  }\n\n  function handleMouseEnter() {\n    setHovering(true)\n  }\n\n  function handleMouseLeave() {\n    setHovering(false)\n  }\n\n  function priceDisplayFormatter(value) {\n    return `${value} $`\n  }\n  return (\n    <Fragment>\n      <form className='searchBar' onSubmit={handleSearch} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <div className={`searchBar__card ${(seeMore || hovering) ? 'searchBar__card--hovering' : ''}`} >\n          <div className={`searchBar__card__input ${(seeMore || hovering)?'searchBar__card__input--hovering':''}`}>\n            <Input.Search\n              value={searchString}\n              onChange={(event) => setSearchString(event.target.value)}\n              size='large'\n              enterButton={<Button loading={searchLoading} icon='search' style={{ width: 50, color: `${(hovering || seeMore) ? 'black' : 'white'}` }}></Button>}\n              onSearch={handleSearch}\n\n            />\n          </div>\n          <Collapse isOpened={seeMore || hovering}>\n            <div className='searchBar__card__mainFilters'>\n              <Row gutter={[16, 16]} style={{ marginTop: 0 }}>\n                <Col sm={12} md={5}>\n                  <div className='searchBar__card__mainFilters__filter'>\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder='Category'\n                      showSearch\n                      mode='multiple'\n                      labelInValue\n                      value={selectedCategories}\n                      onChange={handleCatChange}\n                    >\n                      {searchValues.categories.map(cat => (\n                        <Option key={cat.id} value={`${cat.id}`}>{cat.name}</Option>\n                      ))}\n                    </Select>\n                  </div>\n                </Col>\n                <Col sm={12} md={5}>\n                  <div className='searchBar__card__mainFilters__filter'>\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder='Country'\n                      mode='multiple'\n                      value={selectedCountries}\n                      onChange={handleCountryChange}\n                      labelInValue\n                    >\n                      {searchValues.countries.map(country => (\n                        <Option value={`${country.id}`}>{country.name}</Option>\n                      ))}\n                    </Select>\n                  </div>\n                </Col>\n                <Col sm={12} md={5}>\n                  <div className='searchBar__card__mainFilters__filter'>\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder='City'\n                      mode='multiple'\n                      labelInValue\n                      value={selectedCities}\n                      onChange={handleCityChange}\n                    >\n                      {availableCities.map(city => (\n                        <Option value={`${city.id}`}>{city.name}</Option>\n                      ))}\n                    </Select>\n                  </div>\n                </Col>\n                <Col sm={12} md={9}>\n                  <div className='searchBar__card__mainFilters__filter'>\n                    <RangePicker\n                      style={{ width: '100%' }}\n                      onChange={handleDateChange} />\n                  </div>\n                </Col>\n              </Row>\n            </div>\n            <Divider style={{ marginTop: 20, marginBottom: 0 }}>\n              <Button type='link' onClick={handleSeeMore} >{!seeMore ? ('See more') : ('See less')}</Button>\n            </Divider>\n            <Collapse isOpened={seeMore}>\n              <div style={{ paddingTop: 20, paddingBottom: 10 }}>\n                <Row gutter={16} style={{ marginTop: 0 }}>\n                  <Col span={8}>\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder='Organization'\n                      mode='multiple'\n                      labelInValue\n                      value={selectedOrganizations}\n                      onChange={handleOrganizationsChange}\n                    >\n                      {searchValues.organizations.map(org => (\n                        <Option value={`${org.id}`}>{org.name}</Option>\n                      ))}\n                    </Select>\n                  </Col>\n                  <Col span={8} >\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder='Tags'\n                      mode='multiple'\n                      labelInValue\n                      value={selectedTags}\n                      onChange={handleTagsChange}\n                    >\n                      {searchValues.tags.map(tag => (\n                        <Option key={tag.id} value={`${tag.id}`}>{tag.name}</Option>\n                      ))}\n                    </Select>\n                  </Col>\n                  <Col span={8}>\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder='Speakers'\n                      mode='multiple'\n                      labelInValue\n                      value={selectedSpeakers}\n                      onChange={handleSpeakersChange}\n                    >\n                      {searchValues.speakers.map(speaker => (\n                        <Option key={speaker.id} value={`${speaker.id}`}>{speaker.name}</Option>\n                      ))}\n                    </Select>\n                  </Col>\n                </Row>\n                <Row gutter={24} style={{ marginTop: 20 }}>\n                  <Col span={12}>\n                    <h4 style={{ marginBottom: 0 }}>Price:</h4>\n                    <Slider\n                      range\n                      defaultValue={[0, 400]}\n                      max={3000}\n                      tipFormatter={priceDisplayFormatter}\n                      onChange={handlePriceChange}\n                    />\n                  </Col>\n                  <Col span={12}>\n                    <h4 style={{ marginBottom: 0 }}>CE Credits:</h4>\n                    <Slider\n                      range\n                      defaultValue={[0, 3]}\n                      max={10}\n                      onChange={handleCeCreditsChange}\n                    />\n                  </Col>\n                </Row>\n              </div>\n            </Collapse>\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <Button loading={searchLoading} onClick={handleSearch}>Search</Button>\n\n            </div>\n          </Collapse>\n\n        </div>\n      </form>\n\n\n    </Fragment>\n  )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport './EventItem.scss'\nimport {\n  Divider,\n  Button,\n  Skeleton\n} from 'antd'\nimport { Animated } from \"react-animated-css\";\nimport { withRouter } from 'react-router-dom';\n\n\nfunction EventItem(props) {\n  const {\n    event,\n    eventIsOpen,\n    setEventIsOpen,\n    selectedEvent,\n    setSelectedEvent,\n    eventRowNumber,\n    setOldRowNumber,\n    eventColNumber,\n    setOldColNumber,\n    setEventWasClosed,\n    history\n    //isHovering,\n    //setIsHovering\n  } = props\n\n  const [isHovering, setIsHovering] = useState(false)\n\n\n  function handleMouseEnter() {\n    setIsHovering(true)\n  }\n\n  function handleTouch(event) {\n    console.log('touch')\n    setIsHovering(prev => {\n\n      if (prev !== event.id) {\n        return event.id\n      } else {\n        return -1\n      }\n    }\n    )\n  }\n\n  function handleMouseLeave() {\n    setIsHovering(false)\n  }\n\n  function handleEventClick(event) {\n    console.log('click')\n    setOldRowNumber(selectedEvent.eventRowNumber)\n    setOldColNumber(selectedEvent.eventColNumber)\n\n    if (selectedEvent.id === event.id) {\n      if (eventIsOpen) {\n        setSelectedEvent({ id: -1 })\n        setEventWasClosed(false)\n        setOldRowNumber(-1)\n      } else {\n        event.eventRowNumber = eventRowNumber\n        event.eventColNumber = eventColNumber\n        setSelectedEvent(event)\n        setEventWasClosed(true)\n      }\n      console.log('her')\n      setEventIsOpen(!eventIsOpen)\n    } else {\n      console.log('her2')\n      setEventIsOpen(true)\n      if (selectedEvent.id === -1) {\n\n        setEventWasClosed(true)\n      } else {\n        setEventWasClosed(false)\n      }\n      event.eventRowNumber = eventRowNumber\n      event.eventColNumber = eventColNumber\n      setSelectedEvent(event)\n    }\n\n  }\n\n  const [textDisplay, setTextDisplay] = useState('flex')\n  const [buttonsDisplay, setButtonsDisplay] = useState('none')\n\n  // useEffect(() => {\n  //   if (isHovering) {\n  //     setTimeout(() => {\n  //       setTextDisplay('none')\n  //     }, 300)\n\n  //     setButtonsDisplay('flex')\n  //   }\n  // }, [isHovering])\n\n  function handleClickMore(e) {\n    history.push(`/event/${event.id}`)\n    //e.preventDefault()\n  }\n\n  function handleClickTickets(e) {\n    history.push(`/tickets/${event.id}`)\n  }\n\n  const selected = selectedEvent.id === event.id\n  const cardHover = selected || isHovering ? 'eventItem-hovering' : ''\nconsole.log(event.name, event.isSoldOut, event.isSelling)\n  return (\n    <div className={`eventItem ${cardHover}`}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n     // onTouch={handleTouch}\n      // onTouchEnd={e => e.preventDefault()}\n      onClick={() => handleEventClick(event)}\n    >\n      <div className='eventItem__imageContainer'>\n        <img\n          src={event.image}\n          className={`eventItem__image ${(isHovering || selected) && 'eventItem__image-hovering'}`}\n          alt={event.name}\n        />\n        <div className={`${cardHover ? 'overlay-hover' : 'overlay'}`}>\n\n          <div style={{ width: '100%', position: 'absolute', top: 0, left: 0 }}>\n            <div className='eventItem__imageContent' style={{ margin: '10px 10px 0 10px', display: 'flex', justifyContent: 'space-between', }}>\n              <div style={{ display: 'flex', flexDirection: 'column', }}>\n                <Animated animateOnMount={false} isVisible={isHovering || selected} animationIn='fadeInLeft' animationOut='fadeOutLeft' animationInDuration={300} animationOutDuration={300}>\n                  <h3 style={{ margin: 0, fontSize: 20, color: 'white' }}>{event.city}</h3>\n                </Animated>\n                <Animated animateOnMount={false} isVisible={isHovering || selected} animationIn='fadeInLeft' animationOut='fadeOutLeft' animationInDelay={80} animationInDuration={300} animationOutDuration={300}>\n                  <p style={{ padding: 0, fontSize: 16, color: 'white' }}>{event.country}</p>\n                </Animated>\n              </div>\n              <div>\n                <Animated animateOnMount={false} isVisible={isHovering || selected} animationIn='fadeInRight' animationOut='fadeOutRight' animationInDuration={300} animationOutDuration={300}>\n                  <h3 style={{ color: 'white' }}>{event.organization}</h3>\n                </Animated>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='eventItem__contentWrapper'>\n          <div className='eventItem__secondContentWrapper'>\n            <div className='eventItem__nameContentWrapper'>\n              <div className='eventItem__soldOutWrapper' style={event.isSoldOut ? {}:{visibility:\"hidden\"}}>\n                <h1 className='eventItem__soldOutTitle'>Sold Out</h1>\n              </div>\n              <Animated isVisible={!isHovering && !selected} animateOnMount={false} animationOut='fadeOutLeft' animationIn='fadeInLeft' animationInDuration={300} animationOutDuration={300} style={{width: '100%'}}>\n                <div className='eventItem__nameContentSecondWrapper'>\n                  <h1 className='eventItem__name'>{event.name}</h1>\n                  <p className='eventItem__date'>{new Date(event.startDate).toDateString()}</p>\n                </div>\n\n              </Animated>\n            </div>\n            <div className='eventItem__buttonsContainer'>\n              <Animated style={{ height: '100%' }} isVisible={isHovering || selected} animateOnMount={false} animationOut='fadeOutRight' animationIn='fadeInRight' animationInDuration={300} animationOutDuration={300}>\n                <div className='eventItem__buttonsSecondContainer'>\n                  <Button size='large' style={{ color: 'white', backgroundColor: 'rgba(157, 141, 241, 0.7)', }} onClick={() => handleClickMore()}>More</Button>\n                  \n                  {event.isSelling && !event.isSoldOut ? <Button size='large' style={{ color: 'white', backgroundColor: 'rgba(157, 141, 241, 0.7)', marginLeft: 30}} onClick={(event) => handleClickTickets(event)}>Tickets</Button>:\"\"}\n                </div>\n              </Animated>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default withRouter(EventItem)","import React from 'react'\nimport './EventDescriptionItem.scss'\n\nimport {\n  Button\n} from 'antd'\nimport { Animated } from 'react-animated-css'\nimport { withRouter } from 'react-router-dom'\n\n\nfunction EventDescriptionItem(props) {\n  const {\n    event,\n    animate,\n    animationInDirection,\n    animationOutDirection\n  } = props\n  console.log(event)\n\n  let imageTextAnimationIn = animationInDirection === 'right' ? 'fadeInRight' : 'fadeInLeft'\n  let imageTextAnimationOut = animationOutDirection === 'right' ? 'fadeOutRight' : 'fadeOutLeft'\n\n  let descriptionAnimationIn\n  if (animationInDirection === 'down') {\n    descriptionAnimationIn = 'fadeInDown'\n  } else {\n    descriptionAnimationIn = animationInDirection === 'right' ? 'fadeInRight' : 'fadeInLeft'\n  }\n\n  let descriptionAnimationOut\n  if (animationOutDirection === 'up') {\n    descriptionAnimationOut = 'fadeOutUp'\n  } else {\n    descriptionAnimationOut = animationOutDirection === 'right' ? 'fadeOutRight' : 'fadeOutLeft'\n  }\n\n  const priceRange = event.minPrice === event.maxPrice ? `${Number(event.minPrice).toFixed(2)}$` : `${Number(event.minPrice).toFixed(2)} - ${Number(event.maxPrice).toFixed(2)}$`\n\n  return (\n    <div className='eventDescItem'>\n      <div className='eventDescItem__imageWrapper'>\n        <img\n          alt={event.name}\n          src={event.image}\n          className='eventDescItem__image'\n        />\n        <div className='eventDescItem__overlay'>\n\n          <div className='eventDescItem__imageText'>\n            <Animated isVisible={animate} animateOnMount={false} animationIn={imageTextAnimationIn} animationOut={imageTextAnimationOut} animationDuration={300} animationInDelay={100}>\n              <h1 style={{ marginBottom: 0, color: 'white' }}>{event.name}</h1>\n            </Animated>\n            <Animated isVisible={animate} animateOnMount={false} animationIn={imageTextAnimationIn} animationOut={imageTextAnimationOut} animationDuration={300} animationInDelay={180}>\n              <p style={{ fontSize: 18 }}>{`${event.city}, ${event.country}`}</p>\n            </Animated>\n          </div>\n        </div>\n      </div>\n\n      <div className='eventDescItem__contentWrapper'>\n        <div style={{ overflow: 'hidden' }}>\n          <Animated isVisible={animate} animateOnMount={true} animationIn={descriptionAnimationIn} animationOut={descriptionAnimationOut} animationDuration={300} animationInDelay={100}>\n            <h1>Description</h1>\n          </Animated>\n          <Animated isVisible={animate} animateOnMount={true} animationIn={descriptionAnimationIn} animationOut={descriptionAnimationOut} animationDuration={300} animationInDelay={140}>\n            <p>{event.shortDescription}</p>\n          </Animated>\n        </div>\n\n        <div>\n          <div style={{ marginBottom: 30, overflow: 'hidden' }}>\n            <Animated isVisible={animate} animateOnMount={true} animationIn={descriptionAnimationIn} animationOut={descriptionAnimationOut} animationDuration={300} animationInDelay={180}>\n              <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                <h2 style={{ fontSize: 20 }}>Price: <span style={{ fontSize: 20, marginLeft: 5, fontWeight: 400 }}>{priceRange}</span></h2>\n                <h2 style={{ fontSize: 20 }}>CE Credits: <span style={{ fontSize: 20, marginLeft: 5, fontWeight: 400 }}>{event.CECredits}</span></h2>\n              </div>\n            </Animated>\n          </div>\n\n          <Animated isVisible={animate} animateOnMount={true} animationIn={descriptionAnimationIn} animationOut={descriptionAnimationOut} animationDuration={300} animationInDelay={220}>\n            <div className='eventDescItem__actionsWrapper'>\n              <Button size='large' style={{ marginRight: 10 }} onClick={() => props.history.push(`/event/${event.id}`)}>More</Button>\n              <Button size='large' onClick={() => props.history.push(`/tickets/${event.id}`)}>Tickets</Button>\n            </div>\n          </Animated>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\n\nexport default withRouter(EventDescriptionItem)","import React, { Fragment, useEffect, useState } from 'react'\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  DatePicker,\n} from 'antd'\nimport EventItem from './EventItem/EventItem'\nimport EventDescriptionItem from './EventDescriptionItem/EventDescriptionItem'\nimport { Animated } from 'react-animated-css'\nimport { Collapse } from 'react-collapse'\nimport { useMedia } from 'react-use'\n\nimport './Events.scss'\nexport default function Events(props) {\n\n  const mobile = useMedia('(max-width: 700px)')\n\n  const {\n    eventRows,\n    setEventRows,\n    size,\n    events,\n    setEvents,\n  } = props\n  console.log(events[0])\n  useEffect(() => {\n    let numEvents\n    if (size === 'xs') {\n      numEvents = 1\n    } else if (size === 'sm') {\n      numEvents = 1\n    } else if (size === 'md') {\n      numEvents = 2\n    } else if (size === 'lg') {\n      numEvents = 3\n    } else if (size === 'xl') {\n      numEvents = 3\n    } else if (size === 'xxl') {\n      numEvents = 4\n    } else {\n      numEvents = 4\n    }\n\n    var myRows = [];\n    let tempEvents = JSON.parse(JSON.stringify(events))\n    while (tempEvents.length) myRows.push(tempEvents.splice(0, numEvents));\n    setEventRows(myRows)\n  }, [size, events])\n\n\n  const [selectedEvent, setSelectedEvent] = useState({ id: -1 })\n  const [eventIsOpen, setEventIsOpen] = useState(false)\n  const [eventRowNumber, setEventRowNumber] = useState(0)\n  const [oldRowNumber, setOldRowNumber] = useState(-1)\n  const [oldColNumber, setOldColNumber] = useState(-1)\n  const [eventWasClosed, setEventWasClosed] = useState(true)\n\n  const [isHovering, setIsHovering] = useState(-1)\n\n  let animationIn = selectedEvent.eventColNumber > oldColNumber ? 'fadeInLeft' : \"fadeInRight\"\n  let animationInDirection = selectedEvent.eventColNumber > oldColNumber ? 'left' : 'right'\n  if (eventWasClosed) {\n    animationIn = 'fadeInDown'\n    animationInDirection = 'down'\n  }\n\n  let animationOut = selectedEvent.eventColNumber < oldColNumber ? 'fadeOutLeft' : \"fadeOutRight\"\n  let animationOutDirection = selectedEvent.eventColNumber < oldColNumber ? 'left' : 'right'\n\n  if (eventWasClosed) {\n    animationOut = 'fadeOutUp'\n    animationOutDirection = 'up'\n  }\n\n  const gutter = mobile ? 0 : [24, 32]\n\n  return (\n    <div className='events'>\n      {eventRows.map((row, i) => (\n        <Fragment>\n          <Row>\n            {row.map((event, j) => (\n              <Fragment>\n                {event.id && (\n                  <Col style={{padding: '15px 10px'}} xs={24} sm={24} md={12} lg={8} xl={8} xxl={6}>\n                    <EventItem\n                      event={event}\n                      eventIsOpen={eventIsOpen}\n                      setEventIsOpen={setEventIsOpen}\n                      selectedEvent={selectedEvent}\n                      setSelectedEvent={setSelectedEvent}\n                      eventRowNumber={i}\n                      setOldRowNumber={setOldRowNumber}\n                      eventColNumber={j}\n                      setOldColNumber={setOldColNumber}\n                      setEventWasClosed={setEventWasClosed}\n                      isHovering={isHovering === event.id}\n                      setIsHovering={setIsHovering}\n                    />\n                  </Col>\n                )}\n              </Fragment>\n            ))}\n            {!mobile && (\n              <Col span={24}>\n\n                {/* <div style={{ height: eventIsOpen && selectedEvent.eventRowNumber === i ? 450 : 0, position: 'relative' }} className='events__descriptionItem'> */}\n                <Collapse isOpened={selectedEvent.eventRowNumber === i}>\n                  <div style={{ position: 'relative', height: 450 }}>\n                    {row.map((event, j) => (\n                      <div style={{ height: '100%', width: '100%', position: selectedEvent.id === event.id && eventIsOpen ? 'absolute' : 'absolute', display: selectedEvent.id === event.id && eventIsOpen ? '' : '', top: 0, left: 0, overflow: 'hidden', zIndex: selectedEvent.id === event.id && eventIsOpen ? 10 : 0 }}>\n\n                        <Animated\n                          animateOnMount={false}\n                          isVisible={selectedEvent.id === event.id && selectedEvent.eventRowNumber === i}\n                          animationIn={selectedEvent.eventRowNumber !== oldRowNumber ? 'fadeInDown' : animationIn}\n                          animationOut={selectedEvent.eventRowNumber !== oldRowNumber ? 'fadeOutUp' : animationOut}>\n                          <EventDescriptionItem\n                            event={event}\n                            animate={selectedEvent.id === event.id}\n                            animationInDirection={selectedEvent.eventRowNumber !== oldRowNumber ? 'down' : animationInDirection}\n                            animationOutDirection={selectedEvent.eventRowNumber !== oldRowNumber ? 'up' : animationOutDirection}\n                          />\n                        </Animated>\n                      </div>\n                    ))}\n                  </div>\n                </Collapse>\n                {/* </div> */}\n              </Col>\n            )}\n\n          </Row>\n\n        </Fragment>\n      ))}\n    </div>\n  )\n}","import React from 'react'\nimport './Loader.scss'\n\nexport default function Loader() {\n\n  return (\n    <div style={{width: '100%', height: '100%', display: 'flex', alignItems: 'center'}}>\n    <div className=\"sk-chase\">\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n    </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport './Header.scss'\nimport { Link, withRouter } from 'react-router-dom'\n\nfunction Header(props) {\n  const {\n    organization,\n    ticketTime,\n    showTimer,\n    history\n  } = props\n\n  useEffect(() => {\n    setLocation(history.location.pathname.split('/')[1])\n  }, [history.location.pathname])\n\n  const [location, setLocation] = useState(history.location.pathname.split('/')[1])\n\n  if (location === '') {\n    return (\n      <div className='header--eventPage'>\n        <Link to='/' >\n          <h2 style={{ color: 'white', margin: 0, marginLeft: 20, }}>ChiroTix</h2>\n        </Link>\n      </div>\n    )\n  } else if (location === 'event') {\n    return (\n      <div className='header--eventPage'>\n        <Link to='/' >\n          <h2 style={{ color: 'white', margin: 0, marginLeft: 20, }}>ChiroTix</h2>\n        </Link>\n        <h2 style={{ color: 'white', margin: 0, marginRight: 20, }}>{organization}</h2>\n\n      </div>\n    )\n  } else if (location === 'tickets') {\n    return (\n      <div className='header--ticketsPage'>\n        <Link to='/'>\n          <h2 style={{ color: 'white', margin: 0, marginLeft: 20 }}>ChiroTix</h2>\n        </Link>\n        {showTimer && (\n          <h2 style={{ color: 'white', margin: 0, marginRight: 20, }}>{ticketTime}</h2>\n        )}\n      </div>\n    )\n  } else {\n    console.log('her')\n    return (\n      <div className='header'>\n        <Link to='/' >\n          <h2 style={{ color: 'white', margin: 0, marginLeft: 20 }}>ChiroTix</h2>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header)","import React from 'react'\nimport './Hero.scss'\nimport SearchBar from '../SearchBar/SearchBar'\n\nexport default function Hero(props) {\n  const {\n    searchValues,\n    setEvents\n  } = props\n\n  return (\n    <div className='hero' style={{ backgroundImage: `url('../../../test.jpg')` }}>\n      <SearchBar searchValues={searchValues} setEvents={setEvents}/>\n    </div>\n  )\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport SearchBar from '../../Components/SearchBar/SearchBar'\nimport Events from '../../Components/Events/Events'\nimport { useMedia } from 'react-use'\nimport axios from 'axios'\nimport Loader from '../../Components/Loader/Loader'\nimport {\n  Row,\n  Col,\n  Skeleton\n} from 'antd'\nimport Header from '../../Components/Header/Header'\nimport Hero from '../../Components/Hero/Hero'\n\n\nexport default function HomePage(props) {\n  const xs = useMedia('(min-width: 0px) and (max-width: 575px)')\n  const sm = useMedia('(min-width: 576px) and (max-width: 767px)')\n  const md = useMedia('(min-width: 768px) and (max-width: 991px)')\n  const lg = useMedia('(min-width: 992px) and (max-width: 1199px)')\n  const xl = useMedia('(min-width: 1200px) and (max-width: 1599px)')\n  const xxl = useMedia('(min-width: 1600px)')\n  const [eventRows, setEventRows] = useState([[]])\n  const [size, setSize] = useState('')\n\n  useEffect(() => {\n    setEvents(events)\n    if (xs) { setSize('xs') }\n    if (sm) { setSize('sm') }\n    if (md) { setSize('md') }\n    if (lg) { setSize('lg') }\n    if (xl) { setSize('xl') }\n    if (xxl) { setSize('xxl') }\n  }, [xs, sm, md, lg, xl, xxl])\n\n  const [searchValues, setSearchValues] = useState({})\n  const [events, setEvents] = useState([])\n  const [loading, setLoading] = useState(true)\n\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log(process.env.REACT_APP_SERVER_URL)\n      const result = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/initialSearch`)\n      console.log(result)\n      setSearchValues(result.data.result)\n      setEvents(result.data.result.featured)\n      console.log(result.data.result.featured[0])\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  if (loading) {\n    return (\n      <Fragment>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div style={{ margin: '50px 0 30px' }}>\n\n            <Row justify='center' type='flex'>\n              <Col xs={24} sm={18} md={12}>\n                <Skeleton active />\n              </Col>\n            </Row>\n          </div>\n\n            <Row gutter={[24, 32]} style={{width: '100%'}}>\n              {[...Array(6)].map((e, i) => (\n                <Col xs={24} sm={24} md={12} lg={8} xl={8} xxl={6}>\n                  <div style={{ height: 300,padding: 10 }}>\n                    <Skeleton active paragraph={{ rows: 6 }} />\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </div>\n      </Fragment>\n    )\n  }\n\n  return (\n    <Fragment>\n      <div style={{ width: '100%' }}>\n\n        <Hero\n          searchValues={searchValues}\n          setEvents={setEvents}\n        />\n          {/* <SearchBar\n            searchValues={searchValues}\n            setEvents={setEvents}\n          /> */}\n      \n          <Events\n            eventRows={eventRows}\n            setEventRows={setEventRows}\n            size={size}\n            events={events}\n            loading={loading}\n          />\n      \n\n      </div>\n    </Fragment>\n  )\n}","export const URL = 'http://localhost:5000'\n\n","import React, { useState, useEffect } from 'react'\nimport './BigAd.scss'\nimport { Skeleton } from 'antd'\nimport Loader from '../Loader/Loader'\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction BigAd({ image = '', title = '', minorTitle = '', subTitle = '', loading = true, mainInfoBarHeight = 0, isSoldOut = false }) {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    const height = windowDimensions.height - mainInfoBarHeight\n\n    if (loading) {\n        return (\n            <div className='BigAd' style={{ height }}>\n                <div style={{ height: '100%' }}>\n                <div style={{position: 'absolute', top: 0, left: 0, width: '100%'}}>\n                </div>\n                    <Loader />\n                </div>\n\n            </div>\n        )\n    }\n    return (\n        <div className='BigAd' style={{ backgroundImage: `url('${image}')`, height }} >\n            <div className=\"BigAd__soldOutDiv\" style={isSoldOut ? {}:{visibility:\"hidden\"}}>\n                <h1 className=\"BigAd__soldOutTitle\">Sold Out</h1>\n            </div>\n\n            \n            <div className=\"BigAd__flexDiv\">\n                <div className=\"BigAd__bannerDiv\">\n                    <div className=\"BigAd__eventTitleDiv\">\n                        <h1 className='BigAd__eventTitle'>{title}</h1>\n                        <h3 className='BigAd__subTitle'>{subTitle}</h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BigAd","import React, {useState} from 'react'\nimport './ScrollDownButton.scss'\nexport default function ScrollDownButton(props) {\n  const {\n    handleClick,\n    down,\n  } = props\n\n  return (\n    <div style={{ position: 'relative'}} className='scrollButton'>\n      <a onClick={handleClick}><span className={down? 'scrollButton__down': 'scrollButton__up'}></span></a>\n    </div>\n  )\n}","import React, { useRef, useEffect, useState, Fragment } from 'react'\nimport { Typography, Row, Col, Button } from 'antd'\nimport ScrollDownButton from '../ScrollDownButton/ScrollDownButton'\nimport './MainInfoBar.scss'\nimport { useMedia } from 'react-use'\n\nfunction MainInfoBar(props) {\n    const {\n        priceRange,\n        dates,\n        handleBuyTickets,\n        setHeight,\n        handleScroll,\n        down,\n        loading,\n        isSelling=true,\n        isSoldOut=true\n    } = props\n\n    const mobile = useMedia('(max-width: 900px)')\n\n\n    const ref = useRef(null)\n\n\n    useEffect(() => {\n        setHeight(ref.current.clientHeight)\n    })\n\n\n\n\n    return mobile ? (\n        <div ref={ref} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', }} className='MainInfoBar MainInfoBar--sticky'>\n            <div style={{ display: 'flex', justifyContent: 'center', width: '100%', flexWrap: 'wrap',  }}>\n\n                {!loading && (\n                    <Fragment>\n\n                        <div className=\"MainInfoBar__colDiv\" style={{ marginRight: 30, }}>\n\n                            <div className=\"MainInfoBar__nameDiv\">\n                                <h2 style={{ fontSize: '24px' }}>\n                                    Price\n             </h2>\n                            </div>\n                            <div className=\"MainInfoBar__valueDiv\">\n                                <h3 style={{ fontSize: '20px' }}>\n                                    {priceRange}\n                                </h3>\n                            </div>\n\n                        </div>\n                        <div className=\"MainInfoBar__colDiv\" style={{ marginRight: 0 }}>\n                            <div className=\"MainInfoBar__nameDiv\">\n                                <h2 style={{ fontSize: '24px' }}>\n                                    Dates\n         </h2>\n                            </div>\n\n                            <div className=\"MainInfoBar__valueDiv\">\n                                <h3 style={{ fontSize: '20px' }}>\n                                    {dates}\n                                </h3>\n                            </div>\n\n                        </div>\n\n                    </Fragment>\n                )}\n            </div>\n\n            <div className=' MainInfoBar__buttonDiv' style={{ justifyContent: 'center', width: '100%', }}>\n                <Button onClick={handleBuyTickets} className=\"MainInfoBar__button\" style={{ backgroundColor: \"#6D8791\", borderColor: \"#6D8791\", fontSize: \"20px\", fontWeight: \"400\", color: \"white\", margin: '10px 0' }} >Tickets</Button>\n            </div>\n\n\n\n        </div>\n    ) : (\n\n\n            <div ref={ref} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', }} className='MainInfoBar MainInfoBar--sticky'>\n                {/* <div style={{ display: 'flex', margin: '0 80px'}}> */}\n                {/* <div style={{ display: 'flex',flexGrow: '1', justifyContent: 'flex-start', marginLeft: 50 }}> */}\n\n                <div style={{ display: 'flex', justifyContent: 'center', width: '100%', flexWrap: 'wrap', maxWidth: 1600 }}>\n\n                    {!loading && (\n                        <Fragment>\n\n                            <div className=\"MainInfoBar__colDiv\" style={{ marginRight: 30, }}>\n\n                                <div className=\"MainInfoBar__nameDiv\">\n                                    <h2 style={{ fontSize: '24px' }}>\n                                        Price\n                             </h2>\n                                </div>\n                                <div className=\"MainInfoBar__valueDiv\">\n                                    <h3 style={{ fontSize: '20px' }}>\n                                        {priceRange}\n                                    </h3>\n                                </div>\n\n                            </div>\n                            <div className=\"MainInfoBar__colDiv\" style={{ marginRight: 0 }}>\n                                <div className=\"MainInfoBar__nameDiv\">\n                                    <h2 style={{ fontSize: '24px' }}>\n                                        Dates\n                         </h2>\n                                </div>\n\n                                <div className=\"MainInfoBar__valueDiv\">\n                                    <h3 style={{ fontSize: '20px' }}>\n                                        {dates}\n                                    </h3>\n                                </div>\n\n                            </div>\n\n                        </Fragment>\n                    )}\n                </div>\n                <div style={{ marginRight: 0 }}>\n                    <ScrollDownButton handleClick={handleScroll} down={down} />\n                </div>\n\n                {/* </div> */}\n\n{isSelling && !isSoldOut ? <div className=' MainInfoBar__buttonDiv' style={{ justifyContent: 'flex-end', width: '100%' }}>\n                    <Button onClick={handleBuyTickets} className=\"MainInfoBar__button\" style={{ backgroundColor: \"#6D8791\", borderColor: \"#6D8791\", fontSize: \"20px\", fontWeight: \"400\", color: \"white\", marginRight: 150 }} >Tickets</Button>\n                </div>:<div className=' MainInfoBar__buttonDiv' style={{ justifyContent: 'flex-end', width: '100%' }}></div>}\n                \n            </div>\n        );\n}\n\nexport default MainInfoBar","import React from 'react'\nimport { Typography, Row, Col, List, Tag, Skeleton } from 'antd'\n\nimport './EventDescription.scss'\n\nfunction EventDescription({ description = '', speakers = [], tags = [], loading = true }) {\n\n    let speakersItems = []\n    for (let i = 0; i < 1; i++) {\n        speakers.forEach(speaker =>\n            speakersItems.push(<div className=\"EventDescription__speakerDiv\">\n                <a className=\"EventDescription__speakerDiv\">\n                    <img className=\"EventDescription__speakerImage\" alt=\"\" src={speaker.image} />\n                    <h4>\n                        {speaker.name}\n                    </h4>\n                </a>\n            </div>\n            )\n        )\n    }\n    return (\n        <div className=\"EventDescription\">\n            <div className=\"EventDescription__descriptionDiv\">\n                <h3>\n                    Description:\n                </h3>\n                <p className=\"EventDescription__description\">\n                    {loading ? (\n                        <Skeleton active />\n                    ) : (\n                            description\n                        )}\n                </p>\n            </div>\n\n            <h3>\n                Speakers:\n            </h3>\n            <div className=\"EventDescription__speakersDiv\">\n                {loading ? (\n                    [...Array(3)].map((e, i) => (\n                        <Skeleton active avatar />\n                    ))\n                ) : (\n                        speakersItems\n                    )}\n                {/* {speakers.map(speaker => <div className=\"EventDescription__speakerDiv\">\n                    <div className=\"EventDescription__speakerDiv\">\n                        <img className=\"EventDescription__speakerImage\" alt=\"\" src={speaker.image} />\n                        <h4>\n                            {speaker.name}\n                        </h4>\n                    </div>\n                </div>\n                )\n                } */}\n            </div>\n\n            {!loading && (\n                <div className=\"EventDescription__tagsDiv\">\n\n                    <div className=\"EventDescription_tags\">\n                        {tags.map(tag =>\n                            <Tag color=\"geekblue\">{tag.name}</Tag>\n                        )\n                        }\n                    </div>\n\n                </div>\n            )}\n        </div>\n\n    );\n}\n\nexport default EventDescription","import React from 'react'\nimport {Row, Col, Typography} from 'antd'\nimport {\n    FacebookIcon, FacebookShareButton,\n    TwitterIcon, TwitterShareButton,\n    WhatsappIcon, WhatsappShareButton,\n    EmailIcon, EmailShareButton,\n    PinterestIcon, PinterestShareButton\n} from 'react-share'\nimport {useMedia} from 'react-use'\n\nimport './ShareButtons.scss'\n\nfunction ShareButtons({url=''}){\n\n    const mobile = useMedia('(max-width: 900px)')\n    return (\n        // <div className=\"ShareButtons__shareDiv\">\n        //         <Row>\n        //             <Col span={4}>\n        //                 <FacebookShareButton url={url} className=\"ShareButtons__shareButton\">\n        //                     <FacebookIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n        //                     <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\" >Share</Typography.Text>\n        //                 </FacebookShareButton>\n\n        //             </Col>\n        //             <Col span={4}>\n        //                 <TwitterShareButton url={url} className=\"ShareButtons__shareButton\">\n        //                     <TwitterIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n        //                     <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">Tweet</Typography.Text>\n        //                 </TwitterShareButton>\n        //             </Col>\n        //             <Col span={4}>\n        //                 <WhatsappShareButton url={url} className=\"ShareButtons__shareButton\">\n        //                     <WhatsappIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n        //                     <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">WhatsApp</Typography.Text>\n        //                 </WhatsappShareButton>\n        //             </Col>\n        //             <Col span={1}></Col>\n        //             <Col span={4}>\n        //                 <PinterestShareButton url={url} className=\"ShareButtons__shareButton\">\n        //                     <PinterestIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n        //                     <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">Pinterest</Typography.Text>\n        //                 </PinterestShareButton>\n        //             </Col>\n        //             <Col span={1}></Col>\n        //             <Col span={4}>\n        //                 <EmailShareButton url={url} className=\"ShareButtons__shareButton\">\n        //                     <EmailIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n        //                     <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">Send</Typography.Text>\n        //                 </EmailShareButton>\n        //             </Col>\n                    \n        //         </Row>\n        //     </div>\n\n        <div style={{display: 'flex', justifyContent: mobile ? 'flex-start' : 'center', flexWrap: 'wrap'}}>\n                        <FacebookShareButton url={url} className=\"ShareButtons__shareButton ShareButtons__shareDiv\">\n                            <FacebookIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n                            <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\" >Share</Typography.Text>\n                        </FacebookShareButton>\n                        <TwitterShareButton url={url} className=\"ShareButtons__shareButton ShareButtons__shareDiv\">\n                            <TwitterIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n                            <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">Tweet</Typography.Text>\n                        </TwitterShareButton>\n                        <WhatsappShareButton url={url} className=\"ShareButtons__shareButton ShareButtons__shareDiv\">\n                            <WhatsappIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n                            <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">WhatsApp</Typography.Text>\n                        </WhatsappShareButton>\n                        <EmailShareButton url={url} className=\"ShareButtons__shareButton ShareButtons__shareDiv\">\n                            <EmailIcon size={32} round={true} className=\"ShareButtons__pointer\"/>\n                            <Typography.Text className=\"ShareButtons__shareText ShareButtons__pointer\">Send</Typography.Text>\n                        </EmailShareButton>\n        </div>\n    );\n}\n\nexport default ShareButtons","import React, { useEffect, useState, Fragment, useRef } from 'react'\nimport { URL } from '../../Constants'\nimport axios from 'axios'\nimport { useMedia } from 'react-use'\n\n\nimport BigAd from '../../Components/BigAd/BigAd'\nimport MainInfoBar from '../../Components/MainInfoBar/MainInfoBar'\nimport EventDescription from '../../Components/EventDescription/EventDescription'\nimport ShareButtons from '../../Components/ShareButtons/ShareButtons'\nimport {\n    Skeleton,\n    notification\n} from 'antd'\n\nimport './EventPage.scss'\n\nfunction EventPage(props) {\n\n    const {\n        setOrganization\n    } = props\n\n    const [event, setEvent] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [mainInfoBarHeight, setMainInfoBarHeight] = useState(0)\n    const [scrollHeight, setScrollHeight] = useState(0)\n\n    const [url, setUrl] = useState(URL)\n    useEffect(() => {\n        window.scrollTo(0,0)\n        let fetchEvent = async () => {\n            let eventId = props.match.params.eventId\n            setUrl(URL + `/event/${eventId}`)\n            let result = await axios.get(process.env.REACT_APP_SERVER_URL + `/api/event/${eventId}`)\n            console.log(\"HERE!:\", result.data)\n            if(!result.data.success){ return props.history.push('/notFound') }\n            setEvent(result.data.eventInfo)\n            setOrganization(result.data.eventInfo.organization)\n            window.scrollTo(0,0)\n            setLoading(false)\n        }\n        fetchEvent()\n\n        window.addEventListener('scroll', () => setScrollHeight(window.scrollY));\n        return () => window.removeEventListener('scroll', () => setScrollHeight(window.scrollY));\n    }, [])\n\n    function showErrors(messages, title) {\n        if (!messages || messages.length === 0) { return }\n        messages.forEach(message => {\n            notification.error({\n                message: message.title || title || \"Error!\",\n                description: message.message,\n                placement: 'bottomLeft'\n            })\n        })\n    }\n\n    const mainInfoRef = useRef(null)\n    const headerRef = useRef(null)\n    const [down, setDown] = useState(true)\n\n    function handleScroll() {\n        if (down) {\n            setDown(false)\n            scrollToRef(mainInfoRef)\n        } else {\n            setDown(true)\n            scrollToRef(headerRef)\n        }\n    }\n\n    useEffect(() => {\n        if (scrollHeight > 500) {\n            setDown(false)\n        }\n\n        if (scrollHeight < 200) {\n            setDown(true)\n        }\n    }, [scrollHeight])\n\n    let handleBuyTickets = () => {\n        props.history.push('/tickets/' + props.match.params.eventId)\n    }\n\n    const scrollToRef = (ref) => window.scrollTo({ top: ref.current.offsetTop, behavior: 'smooth' })\n\n\n\n    return (\n        <Fragment>\n            <div className=\"EventPage\" ref={headerRef}>\n\n                <BigAd\n                    image={event.image || '../../../tempImg.jpg'}\n                    mainInfoBarHeight={mainInfoBarHeight}\n                    title={event.name}\n                    subTitle={`${event.city}, ${event.country}`}\n                    loading={loading}\n                    isSoldOut={event.isSoldOut}\n                />\n\n                <div ref={mainInfoRef} style={{ position: \"sticky\", top: 0 }}>\n\n                    <MainInfoBar\n                        setHeight={setMainInfoBarHeight}\n                        priceRange={event.priceRange}\n                        dates={event.dateRange}\n                        handleBuyTickets={handleBuyTickets}\n                        loading={loading}\n                        handleScroll={handleScroll}\n                        down={down}\n                        isSelling={event.isSelling}\n                        isSoldOut={event.isSoldOut}\n                    />\n                </div>\n\n\n                <div className=\"EventPage__page\" >\n                    <EventDescription description={event.longDescription} speakers={event.speakers} tags={event.tags} loading={loading} />\n\n                    {!loading && (\n                        <div className=\"EventPage__shareButtons\">\n                            <ShareButtons url={url} />\n                        </div>\n                    )}\n\n\n   \n                </div>\n            {loading ? (\n                <div >\n                            <Skeleton active />\n                        </div>\n                    ) : (\n                        <div className=\"EventPage__gmaps\">\n                                <iframe title=\"massi\" className=\"EventPage__iframe\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1789.6759986433394!2d-21.90691108388139!3d64.11145742580317!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x48d60caaf8eb043d%3A0xf3846a65cb2f18b0!2sFannborg%202%2C%20K%C3%B3pavogur!5e1!3m2!1sen!2sis!4v1576517501262!5m2!1sen!2sis\" ></iframe>\n                            </div>\n                        )}\n                        </div>\n        </Fragment>\n    );\n}\n\nexport default EventPage;","import React, { Fragment } from 'react'\n\nimport './TicketsImage.scss'\nimport Loader from '../Loader/Loader'\n\nfunction TicketsImage({ imageUrl = '', title = '', subTitle = '', loading = false }) {\n\n\n\n\n    return (\n        <Fragment>\n\n            <div className=\"TicketsImage\">\n                <div className='TicketsImage__test'>\n\n                    <div className='TicketsImage__defaultImage' style={{ backgroundImage: `url(${imageUrl})` }} >\n                    </div>\n                </div>\n                <div className=\"TicketsImage__content\">\n                    {loading ? (\n                        <div>\n                            <Loader />\n                        </div>\n                    ) : (\n                            <Fragment>\n\n                                <h1 className=\"TicketsImage__eventName\">\n                                    {title}\n                                </h1>\n                                <h3 className=\"TicketsImage__date\">\n                                    {subTitle}\n                                </h3>\n                            </Fragment>\n                        )}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default TicketsImage","import React from 'react'\nimport { Steps } from 'antd'\n\nimport './TicketsSteps.scss'\n\nfunction TicketsSteps({ current = 0, stepsInfo=[{}]}) {\n\n    let comp=[];\n    stepsInfo.forEach((step) => {\n        comp.push(\n            <Steps.Step title={step.title} subTitle={step.subTitle} status={step.status} />\n        )\n    })\n\n    return (\n        <div className=\"TicketsSteps\">\n            <div className=\"TicketsSteps__steps\">\n                <Steps current={current} >\n                    {comp}\n                </Steps>\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default TicketsSteps","import React from 'react'\nimport { List, Col, Row, Button, Collapse } from 'antd'\nimport { useMedia } from 'react-use'\nimport './TicketsList.scss'\n\nfunction TicketsList({ ticketTypes = [], location = '', organization = '', handleTicketChange = () => { }, totalTicketPrice = 0 }) {\n\n    const mobile = useMedia('(max-width: 700px)')\n\n    let theTicketTypes = []\n    theTicketTypes.push(\n        <List.Item style={{ margin: 0, padding: 0 }}>\n            <Row className='TicketsList__listRow' gutter={0}>\n                <Col span={1}></Col>\n                <Col span={4}><h3 className=\"TicketsList__ticketInfoTitle\">Event</h3></Col>\n                <Col span={3}></Col>\n                <Col span={3}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Organization</h3></Col>\n                <Col span={2}></Col>\n                <Col span={3}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Location</h3></Col>\n                <Col span={1}></Col>\n                <Col span={3}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Price</h3></Col>\n                <Col span={2}></Col>\n                <Col span={2}><h3 className=\"TicketsList__ticketInfoTitle\" style={{ textAlign: \"center\" }}>Amount</h3></Col>\n\n            </Row>\n        </List.Item>)\n    for (let i = 0; i < ticketTypes.length; i++) {\n        let ticket = ticketTypes[i]\n        theTicketTypes.push(\n            <List.Item >\n                <Row align='center' style={{ alignItems: 'center', display: 'flex' }} className='TicketsList__listRow'>\n                    <Col span={1}></Col>\n                    <Col span={4} className=\"TicketsList__ticketTypeInfo\"> {ticket.name} </Col>\n                    <Col span={3}></Col>\n                    <Col span={3} className=\"TicketsList__ticketTypeInfo rightAlign\"> {organization} </Col>\n                    <Col span={2}></Col>\n                    <Col span={3} className=\"TicketsList__ticketTypeInfo rightAlign\"> {location} </Col>\n                    <Col span={1}></Col>\n                    <Col span={3} className=\"TicketsList__ticketTypeInfo rightAlign\"> {parseFloat(ticket.price).toFixed(2)} $</Col>\n                    <Col span={2}></Col>\n                    <Col span={2} className=\"TicketsList__ticketTypeInfo\">\n                        {ticket.isSoldOut ? <div className=\"TicketsList__amountDiv\">\n                            <h1 className=\"TicketsList__soldOutTitle\">Sold Out</h1>\n                        </div>:<div className=\"TicketsList__amountDiv\">\n                            <Button shape=\"circle\" onClick={() => handleTicketChange(ticket.id, false)} size=\"small\">-</Button>\n                            <h3 className=\"TicketsList__amount\">{ticket.amount}</h3>\n                            <Button shape=\"circle\" onClick={() => handleTicketChange(ticket.id, true)} size=\"small\">+</Button>\n                        </div>}\n                        \n                    </Col>\n                </Row>\n            </List.Item>)\n    }\n\n    theTicketTypes.push(\n        <List.Item style={{ marginTop: 10 }}>\n            <Row className='TicketsList__listRow' align='center'>\n                <Col span={1}></Col>\n                <Col span={4}><h3 className=\"TicketsList__ticketInfoTitle\">Total</h3></Col>\n                <Col span={15}></Col>\n                <Col span={4} push={1} ><h3 className=\"TicketsList__ticketInfoTitle\" style={{ textAlign: \"center\" }}>{parseFloat(totalTicketPrice).toFixed(2)} $</h3></Col>\n            </Row>\n        </List.Item>)\n\n    function createMobileButtons(ticket) {\n        function handleMobile(event, addition) {\n            event.stopPropagation()\n            handleTicketChange(ticket.id, addition)\n            console.log(event.preventDefault)\n        }\n\n        return (\n            <div className=\"TicketsList__amountDiv\">\n                <Button shape=\"circle\" onClick={(event) => handleMobile(event, false)} size=\"small\">-</Button>\n                <h3 className=\"TicketsList__amount\">{ticket.amount}</h3>\n                <Button shape=\"circle\" onClick={(event) => handleMobile(event, true)} size=\"small\">+</Button> \n            </div>\n        )\n    }\n\n    if (!mobile) {\n\n        return (\n            <div className=\"TicketsList\">\n                <List >\n                    {theTicketTypes}\n                </List>\n            </div>\n\n        );\n    } else {\n        return (\n            <div className='TicketsList--mobile'>\n                <Collapse defaultActiveKey={['0']}>\n                    {ticketTypes.map((ticket, i) => (\n                        <Collapse.Panel header={ticket.name} key={`${i}`} extra={createMobileButtons(ticket)}>\n                            <div className='TicketsList--mobile__container'>\n                                <p className='TicketsList--mobile__label'>Price: <span className='TicketsList--mobile__item'>{parseFloat(ticket.price).toFixed(2)}$</span></p>\n                                <p className='TicketsList--mobile__label'>Organization: <span className='TicketsList--mobile__item'>{organization}</span></p>\n                                <p className='TicketsList--mobile__label'>Location: <span className='TicketsList--mobile__item'>{location}</span></p>\n                            </div>\n                        </Collapse.Panel>\n                    ))}\n                </Collapse>\n                <div className='TicketsList--mobile__totalContainer'>\n                    <h1 className='TicketsList--mobile__totalItem'>Total</h1>\n                    <h1 className='TicketsList--mobile__totalItem'>{parseFloat(totalTicketPrice).toFixed(2)} $</h1>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default TicketsList\n\n","import React, { useState } from 'react'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\n\nimport './BillingInformation.scss'\n\nimport {\n  Form,\n  Input,\n  Icon,\n  Checkbox,\n  Modal,\n  Button\n} from 'antd';\n\nfunction BillingInformation(props) {\n\n  const [confirmDirty, setConfirmDirty] = useState(false)\n  const { getFieldDecorator } = props.form;\n  const { buyerInfo, setBuyerInfo } = props\n\n\n  const formItemLayout = {\n    labelCol: {\n      sm: { span: 5, offset: 1 },\n    },\n    wrapperCol: {\n      sm: { span: 15 },\n    },\n  };\n\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\n  let handleConfirmBlur = e => { setConfirmDirty(!!e.target.value) };\n\n  let compareToEmail = (rule, value, callback) => {\n    const { form } = props;\n    if (value && value !== form.getFieldValue('email')) { callback('The emails that you entered are inconsistent!'); }\n    else { callback(); }\n  };\n\n  let validateToConfirmEmail = (rule, value, callback) => {\n    const { form } = props;\n    if (value && confirmDirty) { form.validateFields(['confirmEmail'], { force: true }); }\n    callback();\n  };\n\n  let updateState = (e, field) => {\n    let newBuyer = JSON.parse(JSON.stringify(buyerInfo))\n    if (field === 'phone') { newBuyer[field] = e }\n    else { newBuyer[field] = e.target.value }\n    setBuyerInfo(newBuyer)\n  }\n\n\n  return (\n    <div className=\"BillingInformation\">\n      <div className=\"BillingInformation__buyerInformationDiv\">\n        <div></div>\n        <h2 className=\"BillingInformation__buyerInformation\">Buyer Information</h2>\n      </div>\n\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"Full Name\">\n        {getFieldDecorator('name', {\n          initialValue: buyerInfo.name,\n          rules: [\n            {\n              required: true,\n              message: 'Please input your name!',\n              whitespace: true\n            },\n          ],\n        })(<Input size='large' onChange={(e) => { updateState(e, 'name') }} />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"E-mail\">\n        {getFieldDecorator('email', {\n          initialValue: buyerInfo.email,\n          rules: [\n            {\n              type: 'email',\n              message: 'The input is not a valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your E-mail!',\n            },\n            {\n              validator: validateToConfirmEmail,\n            }\n          ],\n        })(<Input size='large' onChange={(e) => { updateState(e, 'email') }} />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"Confirm Email\" >\n        {getFieldDecorator('confirmEmail', {\n          initialValue: buyerInfo.confirmEmail,\n          rules: [\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your email!',\n            },\n            {\n              validator: compareToEmail,\n            },\n          ],\n        })(<Input size='large' onBlur={handleConfirmBlur} onChange={(e) => { updateState(e, 'confirmEmail') }} />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"Phone Number\">\n        {getFieldDecorator('phone', {\n          initialValue: buyerInfo.phone,\n          rules: [{ required: true, message: 'Please input your phone number!' }],\n        })(<PhoneInput\n          size='large'\n          country={'is'}\n          value={props.form.getFieldValue('phone')}\n          onChange={(e) => { updateState(e, 'phone') }}\n        />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"Address\">\n        {getFieldDecorator('address', {\n          initialValue: buyerInfo.address,\n          rules: [\n            { type: 'string', required: true, message: 'Please input your address!' },\n          ],\n        })(<Input size='large' onChange={(e) => { updateState(e, 'address') }} />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"City\">\n        {getFieldDecorator('city', {\n          initialValue: buyerInfo.city,\n          rules: [\n            { type: 'string', required: true, message: 'Please input your city!' },\n          ],\n        })(<Input size='large' onChange={(e) => { updateState(e, 'city') }} />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"State\">\n        {getFieldDecorator('state', {\n          initialValue: buyerInfo.state,\n          rules: [\n            { type: 'string', required: true, message: 'Please input your state!' },\n          ],\n        })(<Input size='large' onChange={(e) => { updateState(e, 'state') }} />)}\n      </Form.Item>\n\n      <Form.Item {...formItemLayout} style={{ marginBottom: 10 }} label=\"Zip Code\">\n        {getFieldDecorator('zipCode', {\n          initialValue: buyerInfo.zipCode,\n          rules: [\n            { type: 'string', required: true, message: 'Please input your zip code!' },\n          ],\n        })(<Input size='large' onChange={(e) => { updateState(e, 'zipCode') }} />)}\n      </Form.Item>\n\n     \n    </div>\n\n  );\n}\n\nexport default BillingInformation;\n","import React, { useEffect } from 'react'\n\nimport { Form, Collapse, Icon, Input } from 'antd'\n\nimport './TicketOwnersInformation.scss'\n\nconst genExtra = (success) => {\n    if (success === \"empty\") { return }\n    if (success) { return (<Icon type=\"check-circle\" style={{ color: \"green\" }} onClick={event => { event.stopPropagation(); }} />); }\n    else { return (<Icon type=\"warning\" style={{ color: \"red\" }} onClick={event => { event.stopPropagation(); }} />)\n    }\n}\n\nfunction TicketOwnersInformation(props) {\n\n    const { getFieldDecorator } = props.form\n    const { openPanels, setOpenPanels, setTicketsOwnersInfo, ticketsOwnersInfo } = props\n\n    const formItemLayout = {\n        labelCol: {\n            sm: { span: 3 },\n        },\n        wrapperCol: {\n            sm: { span: 15 },\n        },\n    };\n\n    useEffect(() => {\n        let copy = JSON.parse(JSON.stringify(ticketsOwnersInfo))\n        copy.sort((a,b) => { return a.id > b.id ? 1: (a.id < b.id) ? -1:0 })\n        for (let i = 0; i < copy.length; i++) {\n            let ticket = copy[i]\n            ticket.header = `ticket ${i + 1} - ${ticket.name}`\n            for (let k = 0; k < ticket.ownerInfo.length; k++) { ticket.ownerInfo[k].beenTouched = false }\n        }\n        setTicketsOwnersInfo(copy)\n    }, [])\n\n\n    let validateOwnerInfo = (nr, infoNr, e) => {\n        let list = JSON.parse(JSON.stringify(ticketsOwnersInfo))\n        list[nr].ownerInfo[infoNr].value = e.target.value\n        list[nr].ownerInfo[infoNr].beenTouched = true\n\n        let allTouched = true\n        for (let i = 0; i < list[nr].ownerInfo.length; i++) { if (!list[nr].ownerInfo[i].beenTouched) { allTouched = false; break; } }\n\n        //If every input for this owner has not been interacted with then we don't want to show the icon for this panel\n        if (!allTouched) { return setTicketsOwnersInfo(list) }\n\n        list[nr].extra = true\n        for (let i = 0; i < list[nr].ownerInfo.length; i++) {\n            let info = list[nr].ownerInfo[i]\n            if(!info.value){ list[nr].extra = false; break; }\n        }\n\n        setTicketsOwnersInfo(list)\n    }\n\n    let openThis = (panelsOpen) => { setOpenPanels(panelsOpen) }\n\n    let ticketsOwnerInfoHTML = []\n    ticketsOwnerInfoHTML.push(\n        <div >\n            <h2>Attendees' Information</h2>\n        </div>\n    )\n    let ticketsList = []\n    for (let i = 0; i < ticketsOwnersInfo.length; i++) {\n        let ticketState = ticketsOwnersInfo[i]\n        let ticketInfo = []\n\n        if (!ticketState.ownerInfo) { continue }\n\n        for (let j = 0; j < ticketState.ownerInfo.length; j++) {\n            let info = ticketState.ownerInfo[j]\n            console.log(`tickets[${i}].ownerInfo[${j}].${info.label}`)\n            ticketInfo.push(\n                <Form.Item {...formItemLayout} label={info.label} style={{ marginBottom: ticketState.ownerInfo.length === j ? 0: 10 }} >\n                    {getFieldDecorator(`tickets[${i}].ownerInfo[${j}].${info.label}`, {\n                        initialValue: info.value,\n                        rules: [\n                            {\n                                required: info.required,\n                                message: `Please input the ${info.label}!`,\n                            }\n\n                        ],\n                    })(<Input size='large' onChange={(e) => { validateOwnerInfo(i, j, e) }} />)}\n                </Form.Item>\n            )\n        }\n\n        ticketsList.push(\n            <Collapse.Panel header={ticketState.header} key={i + 1} extra={genExtra(ticketState.extra)} >\n                {ticketInfo}\n            </Collapse.Panel>\n        )\n    }\n\n\n    ticketsOwnerInfoHTML.push(<div className='TicketsOwnersInformation__collapse'>\n        <Collapse activeKey={openPanels} onChange={openThis}>\n            {ticketsList}\n        </Collapse>\n    </div>)\n    \n    return (\n        <div className='TicketsOwnersInformation'>\n            {ticketsOwnerInfoHTML}\n        </div>\n    );\n}\n\nexport default TicketOwnersInformation;","import React from 'react'\n\nimport { Form } from 'antd'\n\nimport BillingInformation from './BillingInformation/BillingInformation'\nimport TicketOwnersInformation from './TicketOwnersInformation/TicketOwnersInformation'\n\nimport './Step2Form.scss'\n\n//props: ticketTypes=[{}], ownerInfo=[{label:\"name\", type:\"input\", required:true}]\nfunction Step2Form(props) {\n  const {\n    openPanels, setOpenPanels,\n    ticketsOwnersInfo, setTicketsOwnersInfo,\n    buyerInfo, setBuyerInfo, stepsController\n  } = props\n\n  let handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) { stepsController(1) }\n    });\n  };\n  \n  return (\n    <Form className=\"Step2Form\" onSubmit={handleSubmit} id=\"billingInformationForm\">\n      <BillingInformation form={props.form} buyerInfo={buyerInfo} setBuyerInfo={setBuyerInfo} />\n      <TicketOwnersInformation form={props.form}\n        openPanels={openPanels} setOpenPanels={setOpenPanels} ticketsOwnersInfo={ticketsOwnersInfo} setTicketsOwnersInfo={setTicketsOwnersInfo} />\n    </Form>\n  );\n}\n\nexport default Form.create({ name: 'billingInformation' })(Step2Form)","import React, { Fragment } from 'react'\nimport {\n  Icon,\n  Divider\n} from 'antd'\nimport './OrderDetails.scss'\nimport ShareButtons from '../ShareButtons/ShareButtons'\n\nexport default function OrderDetails(props) {\n  const {\n    orderDetails,\n    tickets,\n    chiroInfo\n  } = props\n\n  const receipt = orderDetails.receipt\n  const lines = receipt.lines\n\n  console.log('receipt', receipt)\n  const order = {\n    no: '23456526372',\n\n  }\n\n  return (\n    <div className='orderDetails'>\n      <div className='orderDetails__container'>\n        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" className='orderDetails__success' />\n        <h1 style={{ fontWeight: 400 }}>We've received your order</h1>\n        <h2 style={{ fontSize: 18, fontWeight: 400 }}>Order id: <span style={{ fontWeight: 500 }}>{order.no}</span></h2>\n\n        <Divider />\n\n\n\n\n        <div style={{ width: '100%', padding: '0 20px', }}>\n          <h3>Order Summary</h3>\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\n\n            <table style={{ width: '80%' }}>\n              <thead>\n                <tr>\n                  <th>Ticket</th>\n                  <th className='orderDetails__rightAlign'>Price</th>\n                  <th className='orderDetails__rightAlign'>Amount</th>\n                  <th className='orderDetails__rightAlign'>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {lines.map(ticket => (\n                  <Fragment>\n                    {ticket.amount > 0 && (\n                      <tr>\n                        <td>{ticket.name}</td>\n                        <td className='orderDetails__rightAlign'>{`${Number(ticket.price).toFixed(2)}$`}</td>\n                        <td className='orderDetails__rightAlign'>{ticket.amount}</td>\n                        <td className='orderDetails__rightAlign'>{`${Number(ticket.amount * ticket.price).toFixed(2)}$`}</td>\n                      </tr>\n                    )}\n                  </Fragment>\n                ))}\n\n                {orderDetails.insurance && (\n                  <Fragment>\n                    <tr style={{ height: 10 }}></tr>\n                    <tr style={{ borderTop: '1px dashed black' }}><td colSpan='4'></td></tr>\n                    <tr style={{ height: 10 }}></tr>\n\n                    <tr>\n                      <th>Insurance</th>\n                      <td className='paymentStep__rightAlign'>{Number(orderDetails.insurancePrice).toFixed(2)}$</td>\n                      <td className='paymentStep__rightAlign'>1</td>\n                      <td className='paymentStep__rightAlign'>{Number(orderDetails.insurancePrice).toFixed(2)}$</td>\n                    </tr>\n                  </Fragment>\n                )}\n\n                <tr style={{ height: 10 }}></tr>\n                <tr >\n                  <th className='orderDetails__rightAlign' colSpan='4'>{Number(receipt.amount).toFixed(2)}$</th>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <Divider />\n        <div style={{ width: '100%', padding: '0 20px' }}>\n          <h3>Payment Information</h3>\n          <div style={{ display: 'flex', width: '100%' }}>\n\n            <div className='orderDetails__detailBlock'>\n              <h4>Credit card:</h4>\n              <p>Card number: <sup>************</sup>-{receipt.cardNumber}</p>\n              <p>Expiry date: {receipt.expiryDate}</p>\n              <p>Amount: {Number(receipt.amount).toFixed(2)}$</p>\n            </div>\n\n            <div className='orderDetails__detailBlock'>\n              <h4>Billing Address:</h4>\n              <p>{receipt.name}</p>\n              <p>{receipt.address}</p>\n              <p>{receipt.place}</p>\n              <p>{receipt.country}</p>\n            </div>\n          </div>\n        </div>\n\n\n\n        <div className='orderDetails__usInfo'>\n          <p>{chiroInfo.companyName}</p>\n          <p>{chiroInfo.location}</p>\n          <p>{chiroInfo.place}</p>\n          <p>{chiroInfo.kennitala}</p>\n        </div>\n      </div>\n\n      <div className='orderDetails__infoContainer'>\n        <ShareButtons />\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport scriptLoader from \"react-async-script-loader\";\nimport Loader from '../Loader/Loader'\n\n\nconst CLIENT = {\n  sandbox:\n    \"https://www.paypal.com/sdk/js?client-id=AdmeHDdVieCtGNml2iCNsWqGaWyPW_puc4XIPUifsXXHWXSU8ynPbbLAL5rTgh9rtvnAkztDsHQlZsGw&disable-funding=credit,card,venmo,sepa,bancontact,eps,giropay,ideal,mybank,p24,sofort\",\n  production:\n    \"your_production_key\"\n};\n\nconst CLIENT_ID = process.env.NODE_ENV === \"production\" ? CLIENT.production : CLIENT.sandbox;\n\nlet PayPalButton = null;\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showButtons: false,\n      loading: true,\n    };\n\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { isScriptLoaded, isScriptLoadSucceed } = nextProps;\n\n    const scriptJustLoaded =\n      !this.state.showButtons && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (scriptJustLoaded) {\n      if (isScriptLoadSucceed) {\n        PayPalButton = window.paypal.Buttons.driver(\"react\", {\n          React,\n          ReactDOM\n        });\n        this.setState({ loading: false, showButtons: true });\n      }\n    }\n  }\n\n\n\n\n\n  render() {\n    const { showButtons, loading } = this.state;\n\n    return (\n      <div >\n        {loading && (<Loader/>)}\n        {showButtons && (\n          <PayPalButton\n          createOrder={(data, actions) => this.props.createOrder(data, actions)}\n          onApprove={(data, actions) => this.props.onApprove(data, actions)}\n          onInit={(data, actions) => this.props.onInit(data, actions)}\n          onClick={(data, actions) => this.props.onClick(data, actions)}\n          onError={(err) => this.props.onError(err)}\n          onCancel={(data) => { console.log(data)}}\n          />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default scriptLoader(`${CLIENT_ID}`)(PaypalButton);\n","import React, {useEffect} from 'react'\nimport Loader from '../Loader/Loader'\n\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\n\n\nexport default function FullscreenLoading(props){\n\n  useEffect(() => {\n    disableBodyScroll(document.querySelector('#root'))\n    return function cleanup(){\n      clearAllBodyScrollLocks()\n    }\n  }, [])\n\n  return(\n    <div style={{overflow: 'hidden',position: 'fixed', top: 0, left: 0, zIndex: 999, height: '100vh', width: '100vw', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n      <Loader/>\n    </div>\n  )\n}","import React, { useEffect, useState, Fragment, useRef, createRef } from 'react'\nimport { Form, Icon, Input, Button, Checkbox, Modal, Divider, notification } from 'antd';\nimport makeAsyncScriptLoader from \"react-async-script\";\nimport PaypalButton from '../../PaypalButton/PaypalButton'\nimport './PaymentForm.scss'\nimport Loader from '../../Loader/Loader';\nimport FullscreenLoading from '../../FullscreenLoading/FullscreenLoading'\n\n\nfunction PaymentForm(props) {\n  const {\n    getFieldDecorator\n  } = props.form;\n\n  const {\n    buyTickets,\n    insuranceSelected,\n    submitCardLoading,\n    setInsuranceSelected,\n    totalPrice,\n    setPaypalProcessingLoading,\n    paypalProcessingLoading\n  } = props\n\n\n\n\n  const onInit = (data, actions) => {\n    if (!termsSelected) {\n      actions.disable()\n    } else {\n      actions.enable()\n    }\n    function initButtons(event) {\n      if (event.target.checked) {\n        actions.enable();\n        console.log('enabled')\n      } else {\n        actions.disable();\n        console.log('disable')\n      }\n    }\n    document.querySelector('#termscheckbox').addEventListener('change', (event) => { initButtons(event); console.log('init') });\n  }\n\n  const onClick = (data, actions) => {\n    console.log(!document.querySelector('#termscheckbox').checked)\n    //if (!document.querySelector('#termscheckbox').checked) {\n    if (!termsSelected) {\n      setTermsMessage('Please accept the terms and conditions')\n    }\n    //} \n    //possibly verify insurance selection\n  }\n\n  const createOrder = (data, actions) => {\n    // This function sets up the details of the transaction, including the amount and line item details.\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          currency_code: 'USD',\n          value: totalPrice\n        }\n      }]\n    });\n  }\n\n  const onApprove = (data, actions) => {\n    // This function captures the funds from the transaction.\n    setPaypalProcessingLoading(true)\n    return actions.order.capture().then(function (details) {\n      // This function shows a transaction success message to your buyer.\n      buyTickets({ method: 'paypal', orderId: data.orderID })\n    });\n  }\n\n  const onError = (err) => {\n    console.log(err)\n  }\n\n\n\n\n\n  const [card, setCard] = useState({ value: '', triedToSubmit: false })\n  const [date, setDate] = useState({ value: '', triedToSubmit: false })\n  const [insuranceDialogOpen, setInsuranceDialogOpen] = useState(false)\n  const [termsDialogOpen, setTermsDialogOpen] = useState(false)\n  const [verifyInsuranceOpen, setVerifyInsuranceOpen] = useState(false)\n  const [termsSelected, setTermsSelected] = useState(false)\n  const [termsMessage, setTermsMessage] = useState('')\n\n  function cc_format(value) {\n    console.log(value)\n    if (!/\\d/.test(value)) {\n      return\n    }\n    let v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '')\n    let matches = v.match(/\\d{4,16}/g);\n    let match = matches && matches[0] || ''\n    let parts = []\n\n    for (let i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4))\n    }\n\n    if (parts.length) {\n      return parts.join('-')\n    } else {\n      return value\n    }\n  }\n\n  function checkValue(str, max) {\n    if (str.charAt(0) !== '0' || str === '00') {\n      var num = parseInt(str);\n      if (isNaN(num) || num <= 0 || num > max) num = 1;\n      str = num > parseInt(max.toString().charAt(0)) && num.toString().length == 1 ? '0' + num : num.toString();\n    };\n    return str;\n  };\n\n  function insert(value) {\n    let input = value;\n    if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3);\n    if (/\\s\\s/.test(input)) input = input.substr(0, 2)\n    var values = input.split('/').map(function (v) {\n      return v.replace(/\\D/g, '')\n    });\n    if (values[0]) values[0] = checkValue(values[0], 12);\n    //if (values[1]) values[1] = checkValue(values[1], 31);\n    var output = values.map(function (v, i) {\n      return v.length === 2 && i < 2 ? v + ' / ' : v;\n    });\n    const newValue = output.join('').substr(0, 7);\n\n    return newValue\n  }\n\n\n  function showError(title, message) {\n    notification.error({\n      message: title,\n      description: message,\n      placement: 'bottomLeft'\n    })\n  }\n\n\n  function getBorgunToken(insuranceVerifiedValue) {\n    const expMonth = date.split('/')[0].trim()\n    const expYear = date.split('/')[1].trim()\n    const pan = card.value.replace('-', '')\n    const verifyCard = { cvc: props.form.getFieldValue('cvc') }\n\n    window.BAPIjs.getToken({ pan, expMonth, expYear, verifyCard }, (result, data) => {\n      if (result.statusCode === 201) {\n        buyTickets({ method: 'borgun', token: data.Token, insurance: insuranceVerifiedValue })\n      } else if (result.statusCode === 401) {\n        showError('Error processing payment', 'The payment could not be processed. Try again later.')\n      } else if (result.statusCode) {\n        showError('Error processing payment', `${result.statusCode} - ${result.message}`)\n      } else {\n        showError('Error processing payment', `Unable to connect to server ${result.message}`)\n      }\n    })\n\n  }\n\n\n  function handleSubmit(e, insuranceVerified = false, insuranceVerifiedValue = insuranceSelected) {\n    e.preventDefault()\n    let error = false\n    if (date.value.length === 0) {\n      error = true\n      setDate({\n        validateStatus: 'error',\n        errorMsg: 'Insert expiration date',\n        triedToSubmit: true,\n        value: date.value,\n      })\n    }\n\n    if (card.value.length === 0) {\n      error = true\n      setCard({\n        validateStatus: 'error',\n        errorMsg: 'Insert card number',\n        triedToSubmit: true,\n        value: card.value\n      })\n    }\n\n    props.form.validateFields((err, values) => {\n      if (!err && !error) {\n        console.log('Received values of form: ', values);\n        if (!insuranceSelected && !insuranceVerified) {\n          setVerifyInsuranceOpen(true)\n          return\n        }\n        buyTickets(values, insuranceVerifiedValue)\n        // getBorgunToken(insuranceVerifiedValue)\n\n\n      }\n    });\n  };\n\n\n\n  function handleCardChange(event) {\n\n    const newValue = cc_format(event.target.value)\n\n    if (card.triedToSubmit) {\n      if (event.target.value.length === 0) {\n        console.log('nei')\n        setCard(old => {\n          return {\n            validateStatus: 'error',\n            errorMsg: 'Insert card number',\n            value: newValue,\n            triedToSubmit: true\n          }\n        })\n      } else {\n        setCard({\n          validateStatus: 'success',\n          errorMsg: null,\n          value: newValue,\n          triedToSubmit: true\n        })\n      }\n    } else {\n      setCard(prev => {\n        return {\n          ...prev,\n          value: newValue,\n        }\n      })\n    }\n  }\n\n  function handleDateChange(event) {\n    const newValue = insert(event.target.value)\n    if (date.triedToSubmit) {\n      if (event.target.value.length === 0) {\n        setDate({\n          validateStatus: 'error',\n          errorMsg: 'Insert expiration date',\n          value: newValue,\n          triedToSubmit: true\n        })\n      }\n      setDate({\n        validateStatus: 'success',\n        errorMsg: null,\n        value: newValue,\n        triedToSubmit: true\n      })\n    } else {\n      setDate(old => {\n        return {\n          ...old,\n          value: newValue,\n        }\n      })\n    }\n  }\n\n  function handleToggleInsuranceDialog() {\n    setInsuranceDialogOpen(prev => !prev)\n  }\n\n  function handleToggleTermsDialog(event) {\n    event.preventDefault()\n    setTermsDialogOpen(prev => !prev)\n  }\n\n  function handleInsuranceChange() {\n    setInsuranceSelected(prev => !prev)\n  }\n\n  function handleVerifyInsurance(verify, event) {\n    console.log('neinie')\n    if (verify) {\n      setInsuranceSelected(true)\n      setVerifyInsuranceOpen(false)\n      handleSubmit(true, verify)\n\n    } else {\n      setVerifyInsuranceOpen(false)\n      handleSubmit(true, verify)\n    }\n  }\n\n  function handleTermsChange() {\n    setTermsSelected(prev => !prev)\n    setTermsMessage('')\n  }\n\n  return (\n    <Fragment>\n      {paypalProcessingLoading && (\n        <FullscreenLoading />\n      )}\n      <Modal zIndex={1000000}\n        title={'Insurance information'}\n        visible={insuranceDialogOpen}\n        onOk={() => setInsuranceDialogOpen(false)}\n        onCancel={() => setInsuranceDialogOpen(false)}\n        footer={[<Button onClick={() => setInsuranceDialogOpen(false)}>Ok</Button>]}\n        centered\n      >\n        <p>Some information about insurance here</p>\n      </Modal>\n      <Modal zIndex={1000000}\n        title={'Terms & conditions'}\n        visible={termsDialogOpen}\n        onOk={() => setTermsDialogOpen(false)}\n        onCancel={() => setTermsDialogOpen(false)}\n        centerd\n        footer={[<Button onClick={() => setTermsDialogOpen(false)}>Ok</Button>]}\n      >\n        <p>Some information about terms and conditions here</p>\n      </Modal>\n      <Modal zIndex={1000000}\n        title={'Are you sure?'}\n        visible={verifyInsuranceOpen}\n        footer={null}\n        centered\n      >\n        <div style={{ width: '100%', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n          <h2>Would you like insurance?</h2>\n          <p style={{ marginBottom: 20 }}>Insurance costs 35$ and without it you are not elligable for a full refund</p>\n          <div style={{ display: 'flex', justifyContent: 'center', marginBottom: 30, flexWrap: 'wrap' }}>\n            <Button style={{ marginTop: 5 }} onClick={(event) => handleVerifyInsurance(false, event)}>No, I don't want insurance</Button>\n            <div style={{ width: 20 }}></div>\n            <Button style={{ marginTop: 5 }} onClick={(event) => handleVerifyInsurance(true, event)}>Yes, I want insurance</Button>\n          </div>\n        </div>\n\n\n      </Modal>\n\n      <div className='paymentForm'>\n        {/* <Form onSubmit={(e) => handleSubmit(true)} >\n\n          <Form.Item style={{ marginBottom: 10 }}\n            validateStatus={card.validateStatus}\n            help={card.errorMsg}\n          >\n\n            <Input\n              value={card.value}\n              onChange={handleCardChange}\n              className='paymentForm__card'\n              size='large'\n              prefix={<Icon type=\"credit-card\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Card number\"\n            />\n          </Form.Item>\n          <Form.Item style={{ marginBottom: 10 }}>\n            {getFieldDecorator('name', {\n              rules: [{ required: true, message: 'Enter name on card' }],\n            })(\n              <Input\n                size='large'\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Name\"\n              />,\n            )}\n          </Form.Item>\n          <div style={{ display: 'flex', }}>\n            <Form.Item style={{ width: '100%' }}\n              validateStatus={date.validateStatus}\n              help={date.errorMsg}\n            >\n              <Input\n                value={date.value}\n                onChange={handleDateChange}\n                className='paymentForm__date'\n                size='large'\n                prefix={<Icon type=\"calendar\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder='MM/YY'\n              />\n\n            </Form.Item>\n            <div style={{ width: 10 }}></div>\n            <Form.Item style={{ width: '100%' }}>\n              {getFieldDecorator('cvc', {\n                rules: [{ required: true, message: 'Enter security code' }],\n              })(\n                <Input\n                  maxLength={3}\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  size='large'\n                  placeholder=\"Security code\"\n                />,\n              )}\n            </Form.Item>\n          </div>\n\n          <Form.Item style={{ marginTop: 5, textAlign: 'right' }} labelAlign='right'>\n            {getFieldDecorator('agreement', {\n              rules: [\n                {\n                  required: true, message: 'Please agree to the terms and conditions'\n                },\n              ],\n            })(\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Checkbox id='termscheckbox' style={{ display: 'flex', flexDirection: 'row-reverse', alignItems: 'center', fontSize: 16 }}> I have read the  <a onClick={handleToggleTermsDialog} style={{ margin: 0 }}>terms and conditions</a></Checkbox>\n\n              </div>\n          ,\n            )}\n          </Form.Item>\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Form.Item>\n              <Button htmlType='submit' size='large' loading={submitCardLoading}>\n                Submit\n              </Button>\n            </Form.Item>\n          </div>\n        </Form>\n        <Divider style={{ marginBottom: 50, color: 'black' }}>Or</Divider> */}\n        <div style={{ width: '100%', textAlign: 'center', margin: 'auto' }}>\n\n\n          <div\n            style={{ width: '80%', margin: 'auto' }}\n          >\n            <React.Fragment>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end', width: '100%' }}>\n                <Icon type='question-circle-o' style={{ marginLeft: 10, fontSize: 16 }} onClick={handleToggleInsuranceDialog} />\n                <Checkbox checked={insuranceSelected} onChange={handleInsuranceChange} style={{ display: 'flex', flexDirection: 'row-reverse', alignItems: 'center', fontSize: 16 }} size='large'>Insurance</Checkbox>\n              </div>\n              <Form labelAlign='right'>\n\n                <Form.Item validateStatus={termsMessage !== '' ? 'error' : ''} help={(<div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end' }}>{termsMessage}</div>)}>\n                  <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Checkbox checked={termsSelected} onChange={handleTermsChange} id='termscheckbox' style={{ display: 'flex', flexDirection: 'row-reverse', alignItems: 'center', fontSize: 16 }}>\n                      I have read the  <a onClick={handleToggleTermsDialog} style={{ margin: 0 }}>terms and conditions</a>\n                    </Checkbox>\n                  </div>\n                </Form.Item>\n              </Form>\n\n              <PaypalButton\n                onInit={onInit}\n                onApprove={onApprove}\n                onClick={onClick}\n                createOrder={createOrder}\n                onError={onError}\n              />\n\n            </React.Fragment>\n          </div>\n\n        </div>\n        <div style={{ width: '100%', textAlign: 'center' }}>\n\n          {/* <PayPalButton\n            style={{ width: '100%' }}\n            amount=\"0.01\"\n            // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n            onSuccess={(details, data) => {\n              alert(\"Transaction completed by \" + details.payer.name.given_name);\n\n              // OPTIONAL: Call your server to save the transaction\n              return fetch(\"/paypal-transaction-complete\", {\n                method: \"post\",\n                body: JSON.stringify({\n                  orderID: data.orderID\n                })\n              });\n            }}\n          /> */}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\n\nconst WrappedPaymentForm = Form.create({ name: 'normal_login' })(PaymentForm);\n\nexport default WrappedPaymentForm\n","import React, { useState, Fragment } from 'react'\nimport PaymentForm from './PaymentForm/PaymentForm'\nimport './PaymentStep.scss'\n\nimport {\n  Checkbox,\n  Icon,\n  Modal,\n  Button\n} from 'antd'\n\nexport default function PaymentStep(props) {\n  const {\n    ticketTypes,\n    totalTicketPrice,\n    buyTickets,\n    insuranceSelected,\n    setInsuranceSelected,\n    submitCardLoading,\n    insurancePercentage,\n    paypalProcessingLoading,\n    setPaypalProcessingLoading\n  } = props\n\n\n  const insurancePrice = Number((insurancePercentage * totalTicketPrice)).toFixed(2)\n  const totalPrice = insuranceSelected ? Number(totalTicketPrice + Number(insurancePrice)).toFixed(2) : Number(totalTicketPrice).toFixed(2)\n\n\n\n\n\n\n  return (\n    <Fragment>\n      <div className='paymentStep'>\n        <div className='paymentStep__wrapper' style={{ width: '70%' }}>\n          <h3>Order Summary</h3>\n          <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: 20 }}>\n\n\n            <table style={{ borderCollapse: 'collapse', width: '100%' }}>\n              <thead>\n                <tr>\n                  <th>Ticket</th>\n                  <th className='paymentStep__rightAlign'>Price</th>\n                  <th className='paymentStep__rightAlign'>Amount</th>\n                  <th className='paymentStep__rightAlign'>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ticketTypes.map(ticket => (\n                  <Fragment>\n                    {ticket.amount > 0 && (\n                      <tr key={ticket.id}>\n                        <td>{ticket.name}</td>\n                        <td className='paymentStep__rightAlign'>{`${Number(ticket.price).toFixed(2)}$`}</td>\n                        <td className='paymentStep__rightAlign'>{ticket.amount}</td>\n                        <td className='paymentStep__rightAlign'>{`${Number(ticket.amount * ticket.price).toFixed(2)}$`}</td>\n                      </tr>\n                    )}\n                  </Fragment>\n                ))}\n\n                <tr style={{ height: 10 }}></tr>\n                <tr style={{ borderTop: '1px dashed black' }}><td colSpan='4'></td></tr>\n                <tr style={{ height: 10 }}></tr>\n\n                <tr>\n                  <th>Insurance</th>\n                  <td className='paymentStep__rightAlign'>{insurancePrice}$</td>\n                  <td className='paymentStep__rightAlign'>{insuranceSelected ? '1' : '0'}</td>\n                  <td className='paymentStep__rightAlign'>{insuranceSelected ? insurancePrice : '0.00'}$</td>\n                </tr>\n\n                <tr style={{ height: 10 }}></tr>\n\n\n                <tr >\n                  <th className='orderDetails__rightAlign' colSpan='4'>{totalPrice}$</th>\n                </tr>\n              </tbody>\n            </table>\n\n\n          </div>\n\n\n          <div >\n            <PaymentForm\n              setInsuranceSelected={setInsuranceSelected}\n              insuranceSelected={insuranceSelected}\n              buyTickets={buyTickets}\n              submitCardLoading={submitCardLoading}\n              totalPrice={totalPrice}\n              paypalProcessingLoading={paypalProcessingLoading}\n              setPaypalProcessingLoading={setPaypalProcessingLoading}\n            />\n          </div>\n\n\n        </div>\n      </div>\n    </Fragment>\n  )\n}","import React, { useState, useEffect, useRef, Fragment } from 'react'\nimport { Button, Icon, Modal, notification, Skeleton } from 'antd'\nimport axios from 'axios'\n\nimport io from 'socket.io-client';\n\nimport TicketsImage from '../../Components/TicketsImage/TicketsImage'\nimport TicketsSteps from '../../Components/TicketsSteps/TicketsSteps'\n\nimport TicketsList from '../../Components/TicketsList/TicketsList'\n\n\nimport Step2Form from '../../Components/Step2Form/Step2Form'\nimport OrderDetails from '../../Components/OrderDetails/OrderDetails'\nimport PaymentStep from '../../Components/PaymentStep/PaymentStep'\nimport './TicketsPage.scss'\n\n\nconst URL = process.env.REACT_APP_SERVER_URL\n\nlet stepsInfo = [{\n    title: \"Tickets\"\n}, {\n    title: \"Billing Information\"\n}, { title: \"Payment\" }, {\n    title: \"Receipt\"\n}\n]\nlet defaultImage = '../../../tempDefaultImg.jpg'\nfunction TicketsPage(props) {\n    const {\n        setTime,\n        setShowTimer\n    } = props\n\n\n    const [loading, setLoading] = useState(true)\n    const [reserveLoading, setReserveLoading] = useState(true)\n    const [releaseLoading, setReleaseLoading] = useState(false)\n    const [submitCardLoading, setSubmitCardLoading] = useState(false)\n\n    //position of the steps\n    const [current, setCurrent] = useState(0);\n    const [buyerId, setBuyerId] = useState(undefined)\n\n    const [timer, setTimer] = useState(0)\n    const [releaseTime, setReleaseTime] = useState(undefined)\n    const [eventInfo, setEventInfo] = useState({})\n\n    //Array of objects of the types of tickets for this event and with key \"amount\" representing how many of each type the buyer wants\n    /**\n     * ticketTypes: [{\n     *      id:Integer,\n     *      name: String,\n     *      price: double,\n     *      amount: Integer\n     * }]\n     */\n    const [ticketTypes, setTicketTypes] = useState([]);\n    //Total price of the tickets\n    const [totalTicketPrice, setTotalTicketPrice] = useState(0)\n\n\n    //Array of integer-keys representing which panel of tickets is open (in step 2)\n    const [openPanels, setOpenPanels] = useState([1])\n    const [buyerInfo, setBuyerInfo] = useState({})\n\n    const [orderDetails, setOrderDetails] = useState({})\n    const [chiroInfo, setChiroInfo] = useState({})\n    const [insuranceSelected, setInsuranceSelected] = useState(false)\n    const [insurancePercentage, setInsurancePercentage] = useState(null)\n\n    const [paypalProcessingLoading, setPaypalProcessingLoading] = useState(false)\n\n    /**\n     * ticketsOwnersInfo: [{\n     *          id: Integer, (the id of the ticketType),\n     *          name: String, (name of the ticketType),\n     *          price: double, \n     *          header: String, (is set in TOI.js and represents the header-title of its panel)\n     *          extra: boolean or string, (is set in TOI.js and represents wether the panel is to show an icon on the right side (if \"empty\" then no icon. If true then a success icon, and error icon if false))\n     *          ownerInfo: [{\n     *              label: string, (the label-string for the input for this info)\n                    value: string, (the value in the input for this info)\n                    type: string, (the type of input, \"checkbox\" etc.)\n                    required: boolean, (wether it is required of the user to fill in this info)\n                    beenTouched: boolean (set in TOI.js and represents wether the input has been in focus in the past, if true the user has clicked it sometime in the past)\n     *          }]\n     * }]\n     */\n    const [ticketsOwnersInfo, setTicketsOwnersInfo] = useState([])\n    const ref = useRef({}) //For socket.\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (!releaseTime) { return setTime('') }\n            let now = new Date()\n            if (new Date(releaseTime) - now < 0) { return setReleaseTime(undefined) }\n\n            let currentTimer = new Date(releaseTime) - now\n            setTimer(currentTimer)\n            let time = \"00:00\"\n            if (currentTimer !== 0) {\n                let minutes = parseInt(currentTimer / 60000)\n                let seconds = parseInt((currentTimer % 60000) / 1000)\n                if (minutes < 10) { time = `0${minutes}:` }\n                else { time = minutes + \":\" }\n                if (seconds < 10) { time += `0${seconds}` }\n                else { time += seconds }\n            }\n            setTime(time)\n        }, 1000)\n    }, [timer, releaseTime])\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        let theSocket = null\n        async function fetchData() {\n            let eventId = props.match.params.eventId\n            let result = await axios.get(URL + `/api/tickets/info/${eventId}`)\n            let data = result.data\n            let event = data.event\n\n            if (!data.success) { return showErrors(data.messages) }\n\n            event.ticketTypes.sort((a, b) => { return a.id > b.id ? 1 : (a.id < b.id) ? -1 : 0 })\n            setEventInfo(event.eventInfo)\n            setBuyerId(data.buyerId)\n            setTicketTypes(event.ticketTypes)\n            setInsurancePercentage(data.insurancePercentage)\n\n            ref.current.socket = io.connect(URL, { query: { buyerId: data.buyerId, eventId: eventId } })\n            ref.current.socket.on('connect', () => { console.log(\"COONNNEST!\") })\n\n            ref.current.socket.on('timerDone', () => { showTimerDoneModal() })\n\n            ref.current.socket.on('paymentProcessed', (data) => showReceipt(data))\n            setLoading(false)\n            setReserveLoading(false)\n            theSocket = ref.current.socket\n        }\n        fetchData()\n\n        return () => { if(theSocket){theSocket.disconnect(true)} }\n    }, [props.match.params.eventId])\n\n    let showReceipt = (data) => {\n        console.log('PAYMENT PROCESSED EMIT')\n        if(data.success){\n            console.log('EMITDATA, ',data)\n            setLoading(false)\n            setReleaseLoading(false)\n            setPaypalProcessingLoading(false)\n            setOrderDetails(data.orderDetails)\n            setCurrent(current => current+=1)\n        } else {\n            //TODO\n            console.log('handle this')\n        }\n    }\n\n    //Handle when buyer presses the plus (addTicket=true) or minus (addTickets=false) buttons\n    let handleTicketChange = (ticketId, addTicket) => {\n        let newTicketTypes = JSON.parse(JSON.stringify(ticketTypes))\n        for (let i = 0; i < newTicketTypes.length; i++) {\n            if (newTicketTypes[i].id === ticketId) {\n                if (addTicket) {//Increment the amount of tickets for this type\n                    newTicketTypes[i].amount++\n                    setTotalTicketPrice(totalTicketPrice + parseFloat(newTicketTypes[i].price))\n                    break\n                } else if (newTicketTypes[i].amount > 0) {//decrement the amount of tickets for this type\n                    newTicketTypes[i].amount--\n                    setTotalTicketPrice(totalTicketPrice - parseFloat(newTicketTypes[i].price))\n                    if (ticketsOwnersInfo.length > 0) { //If the buyer has been to the billingInformation page then we want to delete from ticketsOwnersInfo\n                        ticketsOwnersInfo.reverse() //reverse to delete the \"last\" ticket that fits this types id\n                        let ticketToDelete = ticketsOwnersInfo.find(ticket => ticket.id === ticketId)\n                        let index = ticketsOwnersInfo.indexOf(ticketToDelete)\n                        if (index >= 0) { ticketsOwnersInfo.splice(index, 1) }\n                        ticketsOwnersInfo.reverse()\n                        setTicketsOwnersInfo(ticketsOwnersInfo)\n                        break\n                    }\n                }\n            }\n        }\n        setTicketTypes(newTicketTypes)\n    }\n\n    let reserveTickets = async () => {\n        // if(ticketTypes.length === 0){return}\n        setReserveLoading(true)\n        let post = {\n            url: URL + '/api/tickets/reserveTickets',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                buyerId: buyerId,\n                eventId: eventInfo.id,\n                ticketTypes: ticketTypes,\n                socketId: ref.current.socket.id\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n        let { reservedTickets } = data\n        setReserveLoading(false)\n\n        if (!data.success) { return showErrors(data.messages, 'Error reserving tickets') }\n        ref.current.socket.emit('timer')\n        setReleaseTime(data.releaseTime)\n\n        let newTicketsOwnersInfo = []\n        let oldTicketsOwnersInfo = JSON.parse(JSON.stringify(ticketsOwnersInfo))\n        for (let i = 0; i < reservedTickets.length; i++) {\n            let reservedTicket = reservedTickets[i]\n            let ownerInfoForThisTicket = JSON.parse(JSON.stringify(reservedTicket.ownerInfo))\n            for (let j = 0; j < oldTicketsOwnersInfo.length; j++) {\n                let oldTicket = oldTicketsOwnersInfo[j]\n                if (oldTicket.ticketTypeId === reservedTicket.ticketTypeId && !oldTicket.used) {//If there is a ticket of this kind already (perhaps with data)\n                    oldTicket.used = true\n                    ownerInfoForThisTicket = oldTicket.ownerInfo\n                    break;\n                }\n            }\n            newTicketsOwnersInfo.push({\n                id: reservedTicket.id,\n                ticketTypeId: reservedTicket.ticketTypeId,\n                name: reservedTicket.name,\n                price: reservedTicket.price,\n                extra: \"empty\",\n                ownerInfo: ownerInfoForThisTicket\n            })\n        }\n        setTicketsOwnersInfo(newTicketsOwnersInfo)\n        stepsController(1)\n    }\n\n    let releaseTickets = async () => {\n        console.log(\"RELEASE ME!\")\n        setReleaseLoading(true)\n        // if(ticketTypes.length === 0){return}\n        let post = {\n            url: URL + '/api/tickets/releaseTickets',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                buyerId: buyerId,\n                eventId: eventInfo.id,\n                tickets: ticketsOwnersInfo,\n                socketId: ref.current.socket.id\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n\n        if (!data.success) { return showErrors(data.messages, 'Error!') /** TODO: Handle error message from server */ }\n\n        setReleaseTime(undefined)\n        stepsController(-1)\n        setTimer(0)\n        setReleaseLoading(false)\n    }\n\n    let handleBillingInformationSubmit = () => {\n        let list = JSON.parse(JSON.stringify(ticketsOwnersInfo))\n        let open = []\n        for (let i = 0; i < list.length; i++) {\n            list[i].extra = true //if true then the icon for this panel will be shown (success vs error vs empty)\n            for (let j = 0; j < list[i].ownerInfo.length; j++) { list[i].extra = !!list[i].ownerInfo[j].value /**Extra is true iff value is non-empty*/ }\n            if (!list[i].extra) { open.push(i + 1) }\n        }\n        setOpenPanels(open)\n        setTicketsOwnersInfo(list)\n    }\n\n    /**\n     * paymentOptions: {\n     *      method: String ('borgun' || 'paypal')\n     *      insuranceVerified: Boolean (only if method is borgun)\n     *      Token: String (only if method is borgun)\n     *      orderId: String (only if method is paypal)\n     * }\n     * \n     */\n    let buyTickets = async (paymentOptions) => {\n        setSubmitCardLoading(true)\n        console.log(\"BUYINGTICKETS!\")\n        let post = {\n            url: URL + '/api/tickets/buyTickets',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                buyerId: buyerId,\n                eventId: eventInfo.id,\n                tickets: ticketsOwnersInfo,\n                buyerInfo,\n                paymentOptions,\n                insurance: paymentOptions.insuranceVerified ? paymentOptions.insuranceVerified : insuranceSelected,\n                ticketTypes,\n                socketId: ref.current.socket.id\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n\n        console.log(\"DATA:\", data)\n        if (!data.success){\n            showErrors(data.messages, 'Error buying tickets')\n            setPaypalProcessingLoading(false)\n            setLoading(false)\n            setSubmitCardLoading(false)\n        } else {\n            //Do nothing if successful?\n        }\n      //  setSubmitCardLoading()\n        // if (!data.success) {\n        //     showErrors(data.messages, 'Error buying tickets')\n        //     return;\n        // }\n        // setOrderDetails(data.orderDetails)\n        // setChiroInfo(data.chiroInfo[0])\n        // stepsController(1)\n\n    }\n\n    let stepsController = (direction) => {\n        setCurrent(current + direction)\n        if (current + direction >= 3) { setReleaseTime(undefined) }\n    }\n\n    let showTimerDoneModal = () => {\n        Modal.error({\n            title: \"You took too long\",\n            content: \"The tickets you reserved have been unreserved so you have to start over again if you want to buy a ticket\",\n            onOk: () => { setCurrent(0) },\n            centered: true,\n            zIndex: 1000000\n        });\n    }\n\n    function showErrors(messages, title) {\n        if (!messages || messages.length === 0) { return }\n        messages.forEach(message => {\n            notification.error({\n                message: message.title || title || \"Error!\",\n                description: message.message,\n                placement: 'bottomLeft'\n            })\n        })\n    }\n\n    setShowTimer(!!releaseTime && current !== 3)\n\n\n\n\n    let continueButton = \"\";\n    if (current === 1) {\n        continueButton = (\n            <div className=\"TicketsPage__buttonDiv\">\n                <Button htmlType=\"submit\" form=\"billingInformationForm\" className=\"TicketsPage__button\" onClick={handleBillingInformationSubmit}>\n                    Buy tickets\n                        <Icon type=\"arrow-right\" />\n                </Button>\n            </div>\n        );\n    } else if (current === 0) {\n        continueButton = (<div className=\"TicketsPage__buttonDiv\">\n            <Button loading={loading || reserveLoading} onClick={() => reserveTickets()} className=\"TicketsPage__button\" style={{ marginRight: (reserveLoading || loading) ? 10 : 0 }}>\n                Find tickets\n                    <Icon type=\"arrow-right\" />\n            </Button>\n        </div>);\n    }\n\n\n    let backButton = <div></div>;\n    if (current === 1) {\n        backButton = (<div className=\"TicketsPage__buttonDiv\">\n            <Button onClick={releaseTickets} className=\"TicketsPage__button\" loading={releaseLoading} style={{}}>\n                <span style={{ marginRight: 5 }}>\n                    <Icon type=\"arrow-left\" />\n                </span>\n                Back\n            </Button>\n        </div>);\n    } else if (current === 2) {\n        backButton = (<div className=\"TicketsPage__buttonDiv\">\n            <Button loading={submitCardLoading} onClick={() => stepsController(-1)} className=\"TicketsPage__button\">\n                <span style={{ marginRight: 5 }}>\n                    <Icon type=\"arrow-left\" />\n                </span>\n                Back\n        </Button>\n        </div>);\n    }\n\n\n\n    let componentToShow;\n    if (current === 0) {\n        componentToShow = <TicketsList ticketTypes={ticketTypes} organization={eventInfo.organization}\n            location={`${eventInfo.city}, ${eventInfo.country}`} handleTicketChange={handleTicketChange} totalTicketPrice={totalTicketPrice} />\n    } else if (current === 1) {\n        console.log(\"SHOWME!\")\n        componentToShow = <div className=\"TicketsPage__billingInfo\">\n            <Step2Form\n                openPanels={openPanels} setOpenPanels={setOpenPanels}\n                ticketsOwnersInfo={ticketsOwnersInfo} setTicketsOwnersInfo={setTicketsOwnersInfo}\n                buyerInfo={buyerInfo} setBuyerInfo={setBuyerInfo} stepsController={stepsController} current={current} />\n        </div>\n    } else if (current === 2) {\n        componentToShow =\n            <PaymentStep\n                ticketTypes={ticketTypes}\n                totalTicketPrice={totalTicketPrice}\n                buyTickets={buyTickets}\n                insuranceSelected={insuranceSelected}\n                setInsuranceSelected={setInsuranceSelected}\n                submitCardLoading={submitCardLoading}\n                insurancePercentage={insurancePercentage}\n                paypalProcessingLoading={paypalProcessingLoading}\n                setPaypalProcessingLoading={setPaypalProcessingLoading}\n            />\n    } else if (current === 3) {\n        componentToShow = <OrderDetails orderDetails={orderDetails} chiroInfo={chiroInfo} tickets={ticketTypes} />\n        ref.current.socket.disconnect(true)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"TicketsPage\">\n\n                <TicketsImage\n                    imageUrl={defaultImage}\n                    title={eventInfo.name}\n                    subTitle={eventInfo.dateRange}\n                    loading={loading}\n                />\n                <div className=\"TicketsPage__page\">\n                    <div className=\"TicketsPage__ticketsSteps\">\n                        <TicketsSteps current={current} stepsInfo={stepsInfo} />\n                    </div>\n                    {loading ? (\n                        <Skeleton active />\n                    ) : (\n                            <div >\n                                {componentToShow}\n                            </div>\n                        )}\n                    <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: 30 }}>\n                        {backButton}\n                        {continueButton}\n                    </div>\n\n\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default TicketsPage","import React, { useState, useEffect, Fragment } from 'react'\nimport {\n  Form,\n  Icon,\n  Input,\n  Button,\n  Checkbox,\n  DatePicker,\n  Select,\n  InputNumber,\n  Upload,\n  message,\n  notification,\n  Radio,\n  TimePicker\n} from 'antd';\nimport axios from 'axios'\nimport moment from 'moment'\nconst { RangePicker } = DatePicker\nconst { Option } = Select\n\n\nfunction InsertPage(props) {\n\n  const openNotificationWithIcon = (type, title, message) => {\n    notification[type]({\n      message: title,\n      description: message\n    });\n  };\n\n  const { getFieldDecorator, validateFields } = props.form;\n\n  const [loading, setLoading] = useState(true)\n  const [values, setValues] = useState({})\n  const [availableCities, setAvailableCities] = useState([])\n  const [selectedDates, setSelectedDates] = useState([])\n  const [schedule, setSchedule] = useState([])\n  const [selectedSellingTime, setSelectedSellingTime] = useState([])\n  const [selectedTags, setSelectedTags] = useState([])\n  const [selectedImage, setSelectedImage] = useState(null)\n  const [selectedOrganizations, setSelectedOrganizations] = useState([])\n  const [newSpeakers, setNewSpeakers] = useState([{ name: '', image: null }])\n\n  const [tickets, setTickets] = useState([{\n    name: '',\n    amount: 0,\n    price: 0,\n    ownerInfo: [{\n      required: false,\n      type: '',\n      label: ''\n    }]\n  }])\n\n  console.log(newSpeakers)\n  function addTicket() {\n    console.log('asdf')\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets.push({ name: '', amount: 0, price: 0, ownerInfo: [{ required: false, type: '', label: '' }] })\n    setTickets(newTickets)\n  }\n\n  function removeTicket() {\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets.pop()\n    setTickets(newTickets)\n  }\n\n  function addOwnerInfoItem(i) {\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets[i].ownerInfo.push({ required: false, type: '', label: '' })\n    setTickets(newTickets)\n  }\n\n  function removeOwnerInfoItem(i) {\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets[i].ownerInfo.pop()\n    setTickets(newTickets)\n  }\n\n  function handleChangeTicket(i, event, name) {\n    console.log(i)\n    console.log(event)\n\n    if (event) {\n      const value = event.target ? event.target.value : event\n      const oldState = JSON.parse(JSON.stringify(tickets))\n      oldState[i] = {\n        ...oldState[i],\n        [name]: value\n      }\n      setTickets(oldState)\n    }\n    console.log('Her')\n  }\n\n  function handleSchedule(timeStamp, index, isStartTime) {\n    console.log(schedule)\n    if (isStartTime) { schedule[index].startTime = timeStamp }\n    else { schedule[index].endTime = timeStamp }\n    console.log(schedule)\n    setSchedule(schedule)\n  }\n  function handleDateOfEventChange(dates, dateString) {\n    let theSchedule = []\n    if (dates.length === 2) {\n      let nr = dates[1].diff(dates[0], 'days')\n      for (let i = 0; i < nr + 1; i++) {\n        let initialDay = moment(dates[0])\n        theSchedule.push({\n          date: initialDay.add(i, 'd').format('YYYY-MM-DD'),\n          startTime: \"\",\n          endTime: \"\"\n        })\n      }\n    }\n    setSchedule(theSchedule)\n    setSelectedDates(dateString)\n  }\n  function handleOwnerInfoLabelChange(i, j, event) {\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets[i].ownerInfo[j].label = event.target.value\n    setTickets(newTickets)\n  }\n\n  function handleOwnerInfoRequiredChange(i, j, event) {\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets[i].ownerInfo[j].required = event.target.checked\n    setTickets(newTickets)\n  }\n\n  function handleOwnerInfoTypeChanged(i, j, event) {\n    const newTickets = JSON.parse(JSON.stringify(tickets))\n    newTickets[i].ownerInfo[j].type = event.target.value === 1 ? 'input' : 'checkbox'\n    setTickets(newTickets)\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/insertValues`)\n      console.log(result)\n      setValues(result.data)\n      setAvailableCities(result.data.cities)\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    validateFields((err, values) => {\n      console.log(values)\n\n      if (!err) {\n        const formData = new FormData();\n\n        formData.append('images', selectedImage.originFileObj);\n        for(let i = 0; i<newSpeakers.length; i++){\n          console.log(i)\n          console.log(newSpeakers[i].image)\n          if(newSpeakers[i].name !== ''){\n            formData.append('images', newSpeakers[i].image.originFileObj)\n          }\n        }\n        async function uploadEvent() {\n\n\n          const result = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/eventImage`, formData, {\n            headers: {\n              'Content-type': 'multipart/form-data'\n            }\n          })\n          console.log(result)\n          console.log(result.data)\n          const imageUrl = result.data.data[0].url\n\n          const myOrganization = parseInt(selectedOrganizations[0]) ? { id: parseInt(selectedOrganizations[0]) } : { name: selectedOrganizations[0] }\n          console.log(values.speakers)\n\n          const mySpeakers = values.speakers.map(sp => { return { id: parseInt(sp) } })\n\n          for (let i = 0; i < newSpeakers.length; i++) {\n            if(newSpeakers[i].name !== ''){\n              mySpeakers.push({ name: newSpeakers[i].name, image: result.data.data[i+1].url })\n            }\n          }\n          console.log(mySpeakers)\n          const eventResult = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/events`, {\n            data: {\n              name: values.name,\n              organization: myOrganization,\n              startDate: selectedDates[0],\n              endDate: selectedDates[1],\n              startSellingTime: selectedSellingTime[0],\n              finishSellingTime: selectedSellingTime[1],\n              shortDescription: values.shortDescription,\n              longDescription: values.longDescription,\n              cityId: parseInt(values.city),\n              longitude: values.longitude,\n              latitude: values.latitude,\n              category: parseInt(values.category),\n              CECredits: values.CECredits,\n              tags: values.tags.map(tag => parseInt(tag)),\n              tickets: tickets,\n              image: imageUrl,\n              speakers: mySpeakers,\n              schedule: schedule\n            }\n          })\n          console.log(eventResult)\n          if (eventResult.data.success) {\n            openNotificationWithIcon('success', 'Success', 'Successfully inserted event')\n          }\n        }\n        uploadEvent()\n      }\n    });\n  }\n\n  function handleCountryChange(value) {\n    const newCities = values.cities.filter(c => c.id === parseInt(value))\n    setAvailableCities(newCities)\n  }\n\n  function handleOrganizationChange(value) {\n    if (value.length > 1) {\n      setSelectedOrganizations([value[1]])\n    } else {\n      setSelectedOrganizations(value)\n    }\n  }\n\n  console.log(selectedOrganizations)\n  const eventImageUploadProps = {\n    name: 'image',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n        console.log(info.file)\n        setSelectedImage(info.file)\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n\n  function handleAddSpeaker() {\n    setNewSpeakers(temp =>[...temp, {name: '', image: null}])\n  }\n\n  function handleRemoveSpeaker() {\n    setNewSpeakers(temp => { temp.pop(); return [...temp]})\n  }\n\n  function handleChangeSpeakerName(name, i) {\n    setNewSpeakers(temp => {temp[i].name = name; return temp})\n  }\n\n  function handleChangeSpeakerImage(i) {\n    return {\n      name: 'speaker',\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n      headers: {\n        authorization: 'authorization-text'\n      },\n      onChange(info) {\n        if (info.file.status !== 'uploading') {\n          console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n          message.success(`${info.file.name} file uploaded successfully`);\n          console.log(info.file)\n          console.log('temp', newSpeakers)\n          setNewSpeakers(temp => { temp[i].image = info.file; return temp})\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} file upload failed.`);\n        }\n      },\n    }\n  }\n  console.log('newSpaekers', newSpeakers)\n\n  // <TimePicker use12Hours onChange={onChange} />    \n  // <TimePicker use12Hours format=\"h:mm:ss A\" onChange={onChange} />\n  // <TimePicker use12Hours format=\"h:mm a\" onChange={onChange} />\n\n  let scheduledDivs = []\n  for (let i = 0; i < schedule.length; i++) {\n    scheduledDivs.push(\n      <div>\n        <h4 style={{ fontSize: \"15px\" }}>{schedule[i].date}</h4>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <Form.Item label=\"StartOfDay\">\n            {getFieldDecorator(`schedule[${i}].startTime`, {\n              rules: [{ required: true, message: 'Insert schedule for this day' }],\n            })(\n              <TimePicker use12Hours format=\"h:mm a\" onChange={(timeStamp, time) => handleSchedule(timeStamp, i, true)} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"EndOfDay\">\n            {getFieldDecorator(`schedule[${i}].endTime`, {\n              rules: [{ required: true, message: 'Insert schedule for this day' }],\n            })(\n              <TimePicker use12Hours format=\"h:mm a\" onChange={(timeStamp, time) => handleSchedule(timeStamp, i, false)} />\n            )}\n          </Form.Item>\n        </div>\n      </div>\n\n\n    )\n  }\n\n  if (loading) { return null }\n  return (\n    <Form onSubmit={handleSubmit} style={{ width: '50%', margin: 'auto', marginTop: 50 }}>\n      <div style={{ display: 'flex' }}>\n        <Form.Item style={{ width: '50%' }}>\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Input\n              placeholder=\"Name\"\n            />,\n          )}\n        </Form.Item>\n        <div style={{ width: 10 }}></div>\n        <Form.Item style={{ width: '50%' }}>\n          {/* {getFieldDecorator('organization', {\n            rules: [{ required: true, message: 'Insert Organization' }],\n          })( */}\n          <Select\n            mode='tags'\n            placeholder=\"Organization\"\n            onChange={handleOrganizationChange}\n            value={selectedOrganizations}\n          >\n            {values.organizations.map(org => (\n              <Option key={org.id} value={`${org.id}`}>{org.name}</Option>\n            ))}\n          </Select>\n          {/* )} */}\n        </Form.Item>\n\n      </div>\n\n      <Form.Item label='Date of event'>\n        <RangePicker\n          onChange={(date, dateString) => handleDateOfEventChange(date, dateString)}\n          onFocus={e => e.preventDefault()}\n          onBlur={e => e.preventDefault()}\n        />\n      </Form.Item>\n      {scheduledDivs}\n\n      <Form.Item label='Selling time of event'>\n        <RangePicker\n          showTime={{ format: 'HH' }}\n          format=\"YYYY-MM-DD HH\"\n          placeholder={['Start Time', 'End Time']}\n          onChange={(date, dateString) => { setSelectedSellingTime(date) }}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        {getFieldDecorator('shortDescription', {\n          rules: [{ required: true, message: 'Insert event name' }],\n        })(\n          <Input.TextArea autoSize={{ minRows: 3, maxRows: 10 }}\n            placeholder=\"Short description\"\n          />,\n        )}\n      </Form.Item>\n\n      <Form.Item>\n        {getFieldDecorator('longDescription', {\n          rules: [{ required: true, message: 'Insert event name' }],\n        })(\n          <Input.TextArea autoSize={{ minRows: 5, maxRows: 10 }}\n            placeholder=\"Long description\"\n          />,\n        )}\n      </Form.Item>\n\n      <div style={{ display: 'flex' }}>\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('country', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Select\n              showSearch\n              placeholder=\"Country\"\n              onChange={handleCountryChange}\n              filterOption={(input, option) =>\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {values.countries.map(country => (\n                <Option value={`${country.id}`} key={country.id}>{country.name}</Option>\n              ))}\n            </Select>,\n          )}\n        </Form.Item>\n\n        <div style={{ width: 10 }}></div>\n\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('city', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Select\n              placeholder=\"City\"\n              showSearch\n              filterOption={(input, option) =>\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {availableCities.map(city => (\n                <Option value={`${city.id}`} key={city.id}>{city.name}</Option>\n              ))}\n            </Select>,\n          )}\n        </Form.Item>\n\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('longitude', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Input placeholder='Longitude' />\n          )}\n        </Form.Item>\n\n        <div style={{ width: 10 }}></div>\n\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('latitude', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Input placeholder='Latitude' />\n          )}\n        </Form.Item>\n\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('category', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Select placeholder='Category'>\n              {values.categories.map(tag => (\n                <Option key={tag.id} value={`${tag.id}`}>{tag.name}</Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('CECredits', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <InputNumber placeholder={'CE Credits'} style={{ width: '100%' }} />\n          )}\n        </Form.Item>\n\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('tags', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Select mode='multiple' placeholder='Tags'>\n              {values.tags.map(tag => (\n                <Option key={tag.id} value={`${tag.id}`}>{tag.name}</Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item style={{ width: '100%' }}>\n          {getFieldDecorator('speakers', {\n            rules: [{ required: true, message: 'Insert event name' }],\n          })(\n            <Select mode='multiple' placeholder='Speakers'>\n              {values.speakers.map(speaker => (\n                <Option key={speaker.id} value={`${speaker.id}`}>{speaker.name}</Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Upload {...eventImageUploadProps}>\n            <Button>\n              <Icon type=\"upload\" /> Click to Upload\n           </Button>\n          </Upload>\n        </Form.Item>\n      </div>\n\n      <h4>New Speakers</h4>\n      <div>\n        {newSpeakers.map((speaker, i) => (\n          <div style={{ display: 'flex' }}>\n            <Input onChange={e => handleChangeSpeakerName(e.target.value, i)} placeholder='Name' style={{ width: '100%' }} />\n            <Upload {...handleChangeSpeakerImage(i)}>\n              <Button>\n                <Icon type='upload' /> Click to Upload\n              </Button>\n            </Upload>\n          </div>\n        ))}\n\n        {newSpeakers.length === 1 ? (\n          <Button onClick={handleAddSpeaker}>\n            <Icon type='plus' />\n          </Button>\n        ) : (\n            <div style={{ display: 'flex' }}>\n              <Button onClick={handleRemoveSpeaker}>\n                <Icon type='minus' />\n              </Button>\n              <Button onClick={handleAddSpeaker}>\n                <Icon type='plus' />\n              </Button>\n            </div>\n          )}\n\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          {newSpeakers.map((speaker, i) => (\n            <div style={{ display: 'flex' }}>\n              {speaker.image && (\n                <Fragment>\n                  <b>Name: </b>\n                  <p>{speaker.name} </p>\n                  <b>Image: </b>\n                  <p>{speaker.image.name}</p>\n                </Fragment>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n\n\n      <h4>Tickets</h4>\n      {tickets.map((ticket, i) => (\n        <Form.Item lable={`Ticket: ${i}`} style={{ marginBottom: 5 }}>\n          <div style={{ display: 'flex' }}>\n            <Input style={{ width: '50%' }} placeholder='Name' value={ticket.name} onChange={(event) => handleChangeTicket(i, event, 'name')} />\n            <InputNumber placeholder='Price' onChange={(event) => handleChangeTicket(i, event, 'price')} />\n            <InputNumber placeholder='Amount' onChange={(event) => handleChangeTicket(i, event, 'amount')} />\n          </div>\n          <div styl={{ display: 'felx', flexDirection: 'column' }}>\n            {ticket.ownerInfo.map((ownerInfo, j) => (\n              <div style={{ marginLeft: 50, display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <Input placeholder='Label' style={{ width: 150 }} onChange={(event) => handleOwnerInfoLabelChange(i, j, event)} />\n                <Checkbox style={{ marginLeft: 10 }} onChange={(event) => handleOwnerInfoRequiredChange(i, j, event)}>Required</Checkbox>\n                <Radio.Group style={{ marginLeft: 10 }} onChange={(event) => handleOwnerInfoTypeChanged(i, j, event)}>\n                  <Radio value={1}>Input</Radio>\n                  <Radio value={2}>Checkbox</Radio>\n                </Radio.Group>\n              </div>\n            ))}\n\n            <div style={{ marginLeft: 50 }}>\n              <Button onClick={() => addOwnerInfoItem(i)} style={{ marginRight: 5 }}>\n                <Icon type='plus'></Icon>\n              </Button>\n              {tickets[i].ownerInfo.length > 1 && (\n                <Button onClick={() => removeOwnerInfoItem(i)}>\n                  <Icon type='minus'></Icon>\n                </Button>\n              )}\n            </div>\n          </div>\n        </Form.Item>\n      ))}\n\n      <Form.Item>\n        <div style={{ display: 'flex', marginTop: 20 }}>\n          <Button onClick={addTicket} style={{ marginRight: 5 }}>\n            <Icon type='plus'></Icon>\n          </Button>\n          {tickets.length > 1 && (\n            <Button onClick={removeTicket}>\n              <Icon type='minus'></Icon>\n            </Button>\n          )}\n        </div>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n          </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\n\nexport default Form.create({ name: 'normal_login' })(InsertPage);\n","import React, { useEffect, useState, Fragment } from 'react'\nimport OrderDetails from '../../Components/OrderDetails/OrderDetails'\nimport axios from 'axios'\nimport { notification } from 'antd'\nimport Loader from '../../Components/Loader/Loader'\n\nexport default function ReceiptPage(props) {\n\n  const [orderDetails, setOrderDetails] = useState({})\n  const [chiroInfo, setChiroInfo] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const {\n    match\n  } = props\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/orders/${match.params.orderId}`)\n      console.log(result)\n      if (!result.data.success) {\n        //TODO handle\n        notification.error({\n          message: 'Something went wrong',\n          description: result.data.message,\n          placement: 'bottomLeft'\n        })\n        console.log('her')\n        return\n      }\n      console.log(result.data)\n      setOrderDetails(result.data.orderDetails)\n      setChiroInfo(result.data.chiroInfo[0])\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  console.log(chiroInfo)\n\n  if (loading) {\n    return (\n\n      <div style={{height: '80vh'}}>\n        <Loader />\n      </div>\n    )\n  }\n  return (\n    <Fragment>\n      <div style={{ marginTop: 30 }}>\n        <OrderDetails orderDetails={orderDetails} chiroInfo={chiroInfo} tickets={orderDetails.lines}/>\n      </div>\n    </Fragment>\n  )\n}","import React, { Fragment } from 'react'\nimport { Button } from 'antd'\nimport './NotFoundPage.scss'\nimport {withRouter} from 'react-router-dom'\n\nfunction NotFoundPage(props) {\n\n  return (\n    <Fragment>\n    <div className='notFound'>\n      <div className='notFound__content'>\n        <div className='notFound__wrapper'>\n          <div className='notFound__container'>\n            <h1 className='notFound__404'>\n              404\n            </h1>\n            <div className='notFound__text'>\n              Page Not Found\n            </div>\n          </div>\n          <div className='notFound__buttonContainer'>\n          <Button className='notFound__buttton' onClick={() => props.history.push('/')}>Home</Button>\n          </div>\n        </div>\n      </div>\n    </div>\n    </Fragment>\n  )\n}\n\nexport default withRouter(NotFoundPage)","import React from 'react';\nimport {\n    Button,\n    Card,\n    Form,\n    Input,\n    Icon, \n    notification\n} from 'antd';\nimport axios from 'axios'\nimport './LoginForm.scss';\nimport { withRouter } from 'react-router-dom'\n\nfunction LoginForm(props){\n\n    const { getFieldDecorator } = props.form;\n\n    const formItemLayout = {\n        labelCol: {\n            sm: { span: 5, offset: 1 },\n        },\n        wrapperCol: {\n            sm: { span: 15 },\n        },\n    };\n\n    let handleSubmit = e => {\n        console.log(\"HERE!\")\n        e.preventDefault();\n        props.form.validateFieldsAndScroll((err, values) => {\n          if (!err) { \n            postRequest(values.email, values.password)  \n            console.log(values)/**Send login request to server */ }\n        });\n      };\n\n    \n    let postRequest = async (email, password) => {\n        let post = {\n            url: `${process.env.REACT_APP_SERVER_URL}/api/login`,\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                password,\n                email\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n\n        if(!data.success || !data.accessToken){return showErrors(data.messages, \"Login error!\")}\n        else { \n            window.localStorage.setItem('access_token', data.accessToken) \n            props.history.push('/insert')\n        }\n    }\n\n    function showErrors(messages, title) {\n        if(!messages || messages.length === 0){return}\n        messages.forEach(message => {\n            notification.error({\n                message: message.title || title || \"Error!\",\n                description: message.message,\n                placement: 'bottomLeft'\n            })\n        })\n    }\n    //http://localhost:5000/login?socketId=${socketID}\n    // var handleSubmit = () => {\n    //     fetch(`${process.env.REACT_APP_SERVER_URL}/login`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             email: email,\n    //             password: password\n    //         })\n    //     })\n    // }\n\n    return (\n        <div className=\"LoginForm\">\n            <Card title=\"Login\" className=\"LoginForm__card\">\n                <Form onSubmit={handleSubmit} id=\"loginForm\">\n                    <Form.Item {...formItemLayout} style={{ marginBottom: 5 }} label=\"E-mail\">\n                        {getFieldDecorator('email', {\n                            rules: [\n                                {\n                                    type: 'email',\n                                    message: 'The input is not a valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                }\n                            ],\n                        })(<Input/>)}\n                    </Form.Item>\n\n                    <Form.Item {...formItemLayout} label=\"Password\" >\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: 'Please input your password!' }] \n                        })\n                        (<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} />)}\n                    </Form.Item>\n\n                    <div className=\"LoginForm__submitButtonDiv\">\n                        <Button htmlType='submit' className=\"LoginForm__submitButton\">Submit</Button>\n                    </div>\n\n                </Form>\n            </Card>\n        </div>\n\n    );\n}\nexport default Form.create({ name: 'loginForm' })(withRouter(LoginForm));","import React from 'react';\nimport {\n    Button,\n    Card,\n    Form,\n    Input,\n    Icon, \n    notification\n} from 'antd';\nimport axios from 'axios'\nimport './CreateUserForm.scss';\nimport { withRouter } from 'react-router-dom'\nimport {getAccessToken} from '../Authentication/helpers'\n\nconst URL = process.env.REACT_APP_SERVER_URL\n\nfunction CreateUserForm(props){\n\n    const { getFieldDecorator } = props.form;\n\n    const formItemLayout = {\n        labelCol: {\n            sm: { span: 5, offset: 1 },\n        },\n        wrapperCol: {\n            sm: { span: 15 },\n        },\n    };\n\n    let handleSubmit = e => {\n        console.log(\"HERE!\")\n        e.preventDefault();\n        props.form.validateFieldsAndScroll((err, values) => {\n          if (!err) { \n            console.log(values)/**Send login request to server */\n            postRequest(values.email, values.password, values.confirmPassword, values.name)  \n             }\n        });\n      };\n\n    \n    let postRequest = async (email, password, confirmPassword, name) => {\n    console.log(\"POST!\")\n        let post = {\n            url: `${process.env.REACT_APP_SERVER_URL}/api/createUser`,\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                password,\n                email,\n                name,\n                confirmPassword,\n                accessToken: await getAccessToken() || \"matur\"\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n        console.log(data)\n        if(!data.success){return showErrors(data.messages, \"Create User error!\")}\n        else { openNotificationWithIcon('success', 'Success', 'Successfully created the user') }\n    }\n    const openNotificationWithIcon = (type, title, message) => {\n        notification[type]({\n          message: title,\n          description: message\n        });\n      };\n    function showErrors(messages, title) {\n        if(!messages || messages.length === 0){return}\n        messages.forEach(message => {\n            notification.error({\n                message: message.title || title || \"Error!\",\n                description: message.message,\n                placement: 'bottomLeft'\n            })\n        })\n    }\n    //http://localhost:5000/login?socketId=${socketID}\n    // var handleSubmit = () => {\n    //     fetch(`${process.env.REACT_APP_SERVER_URL}/login`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             email: email,\n    //             password: password\n    //         })\n    //     })\n    // }\n\n    return (\n        <div className=\"CreateUserForm\">\n            <Card title=\"Create User\" className=\"CreateUserForm__card\">\n                <Form onSubmit={handleSubmit} id=\"CreateUserForm\">\n                    <Form.Item {...formItemLayout} style={{ marginBottom: 5 }} label=\"E-mail\">\n                        {getFieldDecorator('email', {\n                            rules: [\n                                {\n                                    type: 'email',\n                                    message: 'The input is not a valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                }\n                            ],\n                        })(<Input/>)}\n                    </Form.Item>\n\n                    <Form.Item {...formItemLayout} style={{ marginBottom: 5 }} label=\"Name\">\n                        {getFieldDecorator('name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input the user's name!\",\n                                }\n                            ],\n                        })(<Input/>)}\n                    </Form.Item>\n\n                    <Form.Item {...formItemLayout} label=\"Password\" >\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: 'Please input your password!' }] \n                        })\n                        (<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} />)}\n                    </Form.Item>\n\n                    <Form.Item {...formItemLayout} label=\"Confirm password\" >\n                        {getFieldDecorator('confirmPassword', {\n                            rules: [{ required: true, message: 'Please confirm the password!' }] \n                        })\n                        (<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} />)}\n                    </Form.Item>\n\n                    <div className=\"CreateUserForm__submitButtonDiv\">\n                        <Button htmlType='submit' className=\"CreateUserForm__submitButton\">Submit</Button>\n                    </div>\n\n                </Form>\n            </Card>\n        </div>\n\n    );\n}\nexport default Form.create({ name: 'createUserForm' })(withRouter(CreateUserForm));","import React, {useEffect, useState} from 'react'\nimport {\n    Collapse, \n    notification,\n    List,\n    Row,\n    Col,\n    Button\n} from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './EventsInfoPage.scss'\nimport FileSaver from 'file-saver'\n\n\nfunction EventsInfoPage(props){\n    const [events, setEvents] = useState([])\nconsole.log(\"BOYO\")\n    useEffect(() => {\n        async function getEvents(){\n            let result = await axios(process.env.REACT_APP_SERVER_URL + '/api/eventsInfo')\n            let {data} = result\n            if(!data.success){return showErrors(data.messages)}\n            setEvents(data.events)\n            console.log(\"DATA:\",JSON.stringify(data))\n        }\n        getEvents()\n    }, [])\n\n    async function onDownload(eventId){\n        let response = await axios({\n            url: process.env.REACT_APP_SERVER_URL + '/api/downloadTickets/' + eventId,\n            method: 'get',\n            responseType: 'blob',\n            headers: {\n              'Accept': 'application/vnd.openxmlformats-officedocument'\n               + '.spreadsheetml.sheet',\n            },\n          })\n          FileSaver.saveAs(response.data, 'data.xlsx') \n    }\n\n    async function handleChangeEventState(eventId, isSelling, isVisible, isSoldOut){\n        let post = {\n            url: process.env.REACT_APP_SERVER_URL + '/api/changeEventState',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                eventId: eventId,\n                isSelling: isSelling,\n                isVisible: isVisible,\n                isSoldOut: isSoldOut\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n        console.log(\"DATA:\", data)\n        if(!data.success || !data.event){return showErrors(data.messages)}\n        let newEvents = JSON.parse(JSON.stringify(events))\n        for(let i = 0; i < events.length; i++){\n            if(events[i].eventInfo.id === data.event.id){\n                newEvents[i].eventInfo = data.event\n                break\n            }\n        }\n        setEvents(newEvents)\n    }\n\n    async function handleChangeTicketState(ticketTypeId){\n        let post = {\n            url: process.env.REACT_APP_SERVER_URL + '/api/changeTicketState',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                ticketTypeId: ticketTypeId\n            }\n        }\n\n        let result = await axios(post)\n        let data = result.data\n        if(!data.success || !data.ticket){return showErrors(data.messages)}\n        let newEvents = JSON.parse(JSON.stringify(events))\n        outerloop: for(let i = 0; i < events.length; i++){\n            let event = events[i]\n            for(let j = 0; j < event.ticketTypes.length; j++){\n                let ticketType = event.ticketTypes[j]\n                if(ticketType.id === ticketTypeId){\n                    newEvents[i].ticketTypes[j] = data.ticket\n                    break outerloop\n                }\n            }\n        }\n        setEvents(newEvents)\n\n    }\n\n\n    function showErrors(messages, title) {\n        if (!messages || messages.length === 0) { return }\n        messages.forEach(message => {\n            notification.error({\n                message: message.title || title || \"Error!\",\n                description: message.message,\n                placement: 'bottomLeft'\n            })\n        })\n    }\n\n    let collapsePanels = []\n\n    for(let i = 0; i < events.length; i++){\n        let eventInfo = events[i].eventInfo\n        let ticketTypes = events[i].ticketTypes\n\n        let ticketDivs = []\n        ticketDivs.push(\n            <List.Item style={{ margin: 0, padding: 0 }}>\n                <Row className='TicketsList__listRow' gutter={0}>\n                    <Col span={1}></Col>\n                    <Col span={4}><h3 className=\"TicketsList__ticketInfoTitle\">Type</h3></Col>\n                    <Col span={2}></Col>\n                    <Col span={3}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Price</h3></Col>\n                    <Col span={1}></Col>\n                    <Col span={3}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Amount</h3></Col>\n                    <Col span={1}></Col>\n                    <Col span={3}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Reserved</h3></Col>\n                    <Col span={1}></Col>\n                    <Col span={2}><h3 className=\"TicketsList__ticketInfoTitle rightAlign\">Sold</h3></Col>\n                    <Col span={1}></Col>\n                    <Col span={2}></Col>\n    \n                </Row>\n            </List.Item>)\n        for(let j = 0; j < ticketTypes.length; j++){\n            let ticketType = ticketTypes[j]\n            ticketDivs.push(\n                <List.Item>\n                    <Row align='center' style={{ alignItems: 'center', display: 'flex'}} className='TicketsList__listRow'>\n                    <Col span={1}></Col>\n                    <Col span={4} className=\"TicketsList__ticketTypeInfo\"> {ticketType.name} </Col>\n                    <Col span={2}></Col>\n                    <Col span={3} className=\"TicketsList__ticketTypeInfo rightAlign\"> {parseFloat(ticketType.price).toFixed(2)} $</Col>\n                    <Col span={1}></Col>\n                    <Col span={3} className=\"TicketsList__ticketTypeInfo rightAlign\"> {ticketType.amount} </Col>\n                    <Col span={1}></Col>\n                    <Col span={3} className=\"TicketsList__ticketTypeInfo rightAlign\"> {ticketType.reserved} </Col>\n                    <Col span={1}></Col>\n                    <Col span={2} className=\"TicketsList__ticketTypeInfo rightAlign\"> {ticketType.sold}</Col>\n                    <Col span={1}></Col>\n            <Col span={2}>\n                <Button style={ticketType.disabled ? {backgroundColor:\"green\"}:{backgroundColor:\"red\"}} onClick={() => {handleChangeTicketState(ticketType.id)}}>{ticketType.disabled ? \"Enable\":\"Disable\"}</Button>\n                </Col>\n                </Row>\n                </List.Item>\n            )\n        }\n\n        collapsePanels.push(\n        <Collapse.Panel header={eventInfo.name} key={i+1}>\n            <List>\n                {ticketDivs}\n            </List>\n            <Row align='center'>\n                <Col span={6}>\n                    <Button onClick={() => onDownload(eventInfo.id)} >Download</Button>\n                </Col>\n                <Col span={6}>\n                    <Button onClick={() => handleChangeEventState(eventInfo.id, !eventInfo.adminIsSelling, eventInfo.isVisible, eventInfo.isSoldOut)} style={eventInfo.adminIsSelling ? {backgroundColor:\"red\"}:{backgroundColor:\"green\"}}>isSelling={eventInfo.adminIsSelling ? \"TRUE\":\"FALSE\"}</Button>\n                </Col>\n                <Col span={6}>\n                    <Button onClick={() => handleChangeEventState(eventInfo.id, eventInfo.adminIsSelling, !eventInfo.isVisible, eventInfo.isSoldOut)} style={eventInfo.isVisible ? {backgroundColor:\"red\"}:{backgroundColor:\"green\"}}>isVisible={eventInfo.isVisible ? \"TRUE\":\"FALSE\"}</Button>\n                </Col>\n                <Col span={6}>\n                    <Button onClick={() => handleChangeEventState(eventInfo.id, eventInfo.adminIsSelling, eventInfo.isVisible, !eventInfo.isSoldOut)} style={!eventInfo.isSoldOut ? {backgroundColor:\"red\"}:{backgroundColor:\"green\"}}>isSoldOut={eventInfo.isSoldOut ? \"TRUE\":\"FALSE\"}</Button>\n                </Col>\n            </Row>\n            \n        </Collapse.Panel>\n        )\n    }\n    return (\n        <div className=\"EventsInfoPage\">\n            <Collapse className=\"EventsInfoPage__collapse\" defaultActiveKey={1}>\n                {collapsePanels}\n            </Collapse>\n        </div>\n        \n    );\n}\n\nexport default withRouter(EventsInfoPage)","import React, { useEffect, useState } from 'react';\nimport {Fragment} from 'react'\nimport {Route, Switch, withRouter} from 'react-router-dom'\nimport {AuthenticatedRoute} from './Components/Authentication/helpers'\nimport './App.css';\nimport HomePage from './Pages/HomePage/HomePage'\nimport 'antd/dist/antd.css';\nimport Header from './Components/Header/Header'\nimport EventPage from './Pages/EventPage/EventPage'\nimport TicketsPage from './Pages/TicketsPage/TicketsPage'\nimport InsertPage from './Pages/InsertPage/InsertPage'\nimport ReceiptPage from './Pages/ReceiptPage/ReceiptPage';\nimport NotFoundPage from './Pages/NotFoundPage/NotFoundPage';\nimport LoginForm from './Components/LoginForm/LoginForm'\nimport CreateUserForm from './Components/CreateUserForm/CreateUserForm'\nimport EventsInfoPage from './Pages/EventsInfoPage/EventsInfoPage'\n\n\nfunction App() {\n\n  const [organization, setOrganization] = useState('')\n  const [ticketTime, setTicketTime] = useState('')\n  const [showTimer, setShowTimer] = useState(false)\n\n  useEffect(() => {\n    window.BAPIjs.setPublicToken('myToken')\n  }, [])\n\n  return (\n    <Fragment>\n      <Header \n        organization={organization} \n        ticketTime={ticketTime}\n        showTimer={showTimer}\n      />\n      <Switch>\n        <Route path='/' exact component={HomePage}/>\n        <Route path='/event' exact component={EventPage}/>\n        <Route path='/tickets' exact component={TicketsPage}/>\n        <Route path='/createUser' exact component={CreateUserForm}/>\n        <AuthenticatedRoute path='/insert' exact component={InsertPage}/>\n        <AuthenticatedRoute path='/eventsInfo' component={EventsInfoPage}/>\n        <Route path='/event/:eventId' exact render={routeProps => <EventPage {...routeProps} setOrganization={setOrganization}/>}/>\n        <Route path='/tickets/:eventId' exact render={routeProps => <TicketsPage {...routeProps} setTime={setTicketTime} setShowTimer={setShowTimer}/>}/>\n        <Route path='/orders/:orderId' exact component={ReceiptPage}/>\n        <Route path='/login' exact component={LoginForm}/>\n        <Route exact component={NotFoundPage}/>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}